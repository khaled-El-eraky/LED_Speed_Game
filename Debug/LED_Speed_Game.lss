
LED_Speed_Game.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001380  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000040  00800060  00001380  00001414  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008000a0  008000a0  00001454  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001454  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000160  00000000  00000000  00001484  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002411  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000082f  00000000  00000000  000039f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000088c  00000000  00000000  00004224  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000348  00000000  00000000  00004ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000732  00000000  00000000  00004df8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000aa3  00000000  00000000  0000552a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  00005fcd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
       4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__vector_1>
       8:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__vector_2>
       c:	0c 94 3a 01 	jmp	0x274	; 0x274 <__vector_3>
      10:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      14:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      18:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      1c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      20:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      24:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      28:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      2c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      30:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      34:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      38:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      3c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      40:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      44:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      48:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      4c:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      50:	0c 94 69 00 	jmp	0xd2	; 0xd2 <__bad_interrupt>
      54:	41 02       	muls	r20, r17
      56:	4c 02       	muls	r20, r28
      58:	57 02       	muls	r21, r23
      5a:	62 02       	muls	r22, r18
      5c:	6d 02       	muls	r22, r29
      5e:	78 02       	muls	r23, r24
      60:	83 02       	muls	r24, r19
      62:	8e 02       	muls	r24, r30
      64:	ab 02       	muls	r26, r27
      66:	b6 02       	muls	r27, r22
      68:	c1 02       	muls	r28, r17
      6a:	cc 02       	muls	r28, r28
      6c:	d7 02       	muls	r29, r23
      6e:	e2 02       	muls	r30, r18
      70:	ed 02       	muls	r30, r29
      72:	f8 02       	muls	r31, r24
      74:	c2 03       	fmuls	r20, r18
      76:	0b 04       	cpc	r0, r11
      78:	54 04       	cpc	r5, r4
      7a:	9d 04       	cpc	r9, r13
      7c:	e6 04       	cpc	r14, r6
      7e:	2f 05       	cpc	r18, r15
      80:	78 05       	cpc	r23, r8
      82:	c1 05       	cpc	r28, r1
      84:	0a 06       	cpc	r0, r26
      86:	be 06       	cpc	r11, r30
      88:	07 07       	cpc	r16, r23
      8a:	50 07       	cpc	r21, r16
      8c:	99 07       	cpc	r25, r25
      8e:	e2 07       	cpc	r30, r18
      90:	2b 08       	sbc	r2, r11
      92:	74 08       	sbc	r7, r4
      94:	bd 08       	sbc	r11, r13
      96:	06 09       	sbc	r16, r6

00000098 <__ctors_end>:
      98:	11 24       	eor	r1, r1
      9a:	1f be       	out	0x3f, r1	; 63
      9c:	cf e5       	ldi	r28, 0x5F	; 95
      9e:	d8 e0       	ldi	r29, 0x08	; 8
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
      a4:	10 e0       	ldi	r17, 0x00	; 0
      a6:	a0 e6       	ldi	r26, 0x60	; 96
      a8:	b0 e0       	ldi	r27, 0x00	; 0
      aa:	e0 e8       	ldi	r30, 0x80	; 128
      ac:	f3 e1       	ldi	r31, 0x13	; 19
      ae:	02 c0       	rjmp	.+4      	; 0xb4 <__do_copy_data+0x10>
      b0:	05 90       	lpm	r0, Z+
      b2:	0d 92       	st	X+, r0
      b4:	a0 3a       	cpi	r26, 0xA0	; 160
      b6:	b1 07       	cpc	r27, r17
      b8:	d9 f7       	brne	.-10     	; 0xb0 <__do_copy_data+0xc>

000000ba <__do_clear_bss>:
      ba:	20 e0       	ldi	r18, 0x00	; 0
      bc:	a0 ea       	ldi	r26, 0xA0	; 160
      be:	b0 e0       	ldi	r27, 0x00	; 0
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <.do_clear_bss_start>

000000c2 <.do_clear_bss_loop>:
      c2:	1d 92       	st	X+, r1

000000c4 <.do_clear_bss_start>:
      c4:	a8 3a       	cpi	r26, 0xA8	; 168
      c6:	b2 07       	cpc	r27, r18
      c8:	e1 f7       	brne	.-8      	; 0xc2 <.do_clear_bss_loop>
      ca:	0e 94 af 09 	call	0x135e	; 0x135e <main>
      ce:	0c 94 be 09 	jmp	0x137c	; 0x137c <_exit>

000000d2 <__bad_interrupt>:
      d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d6 <DIO_pinConfigure>:
 */ 

#include "DIO.h"

void	DIO_pinConfigure(DIO_Struct * Dio, pinNumber pinNum, pinMode Mode)
{
      d6:	fc 01       	movw	r30, r24
	switch(Mode)
      d8:	41 30       	cpi	r20, 0x01	; 1
      da:	b1 f0       	breq	.+44     	; 0x108 <DIO_pinConfigure+0x32>
      dc:	18 f0       	brcs	.+6      	; 0xe4 <DIO_pinConfigure+0xe>
      de:	42 30       	cpi	r20, 0x02	; 2
      e0:	29 f1       	breq	.+74     	; 0x12c <DIO_pinConfigure+0x56>
      e2:	08 95       	ret
	{
		case INPUT_FLOAT:
		CLEARBIT(Dio->ddr.allRegister,pinNum);
      e4:	21 81       	ldd	r18, Z+1	; 0x01
      e6:	81 e0       	ldi	r24, 0x01	; 1
      e8:	90 e0       	ldi	r25, 0x00	; 0
      ea:	ac 01       	movw	r20, r24
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_pinConfigure+0x1c>
      ee:	44 0f       	add	r20, r20
      f0:	55 1f       	adc	r21, r21
      f2:	6a 95       	dec	r22
      f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_pinConfigure+0x18>
      f6:	ba 01       	movw	r22, r20
      f8:	60 95       	com	r22
      fa:	86 2f       	mov	r24, r22
      fc:	82 23       	and	r24, r18
      fe:	81 83       	std	Z+1, r24	; 0x01
		CLEARBIT(Dio->port.allRegister,pinNum);
     100:	82 81       	ldd	r24, Z+2	; 0x02
     102:	68 23       	and	r22, r24
     104:	62 83       	std	Z+2, r22	; 0x02
		break;
     106:	08 95       	ret
		case INPUT_PULLUP:
		CLEARBIT(Dio->ddr.allRegister,pinNum);
     108:	21 81       	ldd	r18, Z+1	; 0x01
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	ac 01       	movw	r20, r24
     110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_pinConfigure+0x40>
     112:	44 0f       	add	r20, r20
     114:	55 1f       	adc	r21, r21
     116:	6a 95       	dec	r22
     118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_pinConfigure+0x3c>
     11a:	ba 01       	movw	r22, r20
     11c:	84 2f       	mov	r24, r20
     11e:	80 95       	com	r24
     120:	82 23       	and	r24, r18
     122:	81 83       	std	Z+1, r24	; 0x01
		SETBIT(Dio->port.allRegister,pinNum);
     124:	82 81       	ldd	r24, Z+2	; 0x02
     126:	68 2b       	or	r22, r24
     128:	62 83       	std	Z+2, r22	; 0x02
		break;
     12a:	08 95       	ret
		case OUTPUT:
		SETBIT(Dio->ddr.allRegister,pinNum);
     12c:	21 81       	ldd	r18, Z+1	; 0x01
     12e:	81 e0       	ldi	r24, 0x01	; 1
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	ac 01       	movw	r20, r24
     134:	02 c0       	rjmp	.+4      	; 0x13a <DIO_pinConfigure+0x64>
     136:	44 0f       	add	r20, r20
     138:	55 1f       	adc	r21, r21
     13a:	6a 95       	dec	r22
     13c:	e2 f7       	brpl	.-8      	; 0x136 <DIO_pinConfigure+0x60>
     13e:	ba 01       	movw	r22, r20
     140:	62 2b       	or	r22, r18
     142:	61 83       	std	Z+1, r22	; 0x01
     144:	08 95       	ret

00000146 <DIO_pinWrite>:
	}
}

void	DIO_pinWrite(DIO_Struct * Dio, pinNumber pinNum, digitalState State)
{
	switch(State)
     146:	44 23       	and	r20, r20
     148:	89 f0       	breq	.+34     	; 0x16c <DIO_pinWrite+0x26>
     14a:	41 30       	cpi	r20, 0x01	; 1
     14c:	f1 f4       	brne	.+60     	; 0x18a <DIO_pinWrite+0x44>
	{
		case HIGH:
		SETBIT(Dio->port.allRegister,pinNum);
     14e:	fc 01       	movw	r30, r24
     150:	42 81       	ldd	r20, Z+2	; 0x02
     152:	21 e0       	ldi	r18, 0x01	; 1
     154:	30 e0       	ldi	r19, 0x00	; 0
     156:	f9 01       	movw	r30, r18
     158:	02 c0       	rjmp	.+4      	; 0x15e <DIO_pinWrite+0x18>
     15a:	ee 0f       	add	r30, r30
     15c:	ff 1f       	adc	r31, r31
     15e:	6a 95       	dec	r22
     160:	e2 f7       	brpl	.-8      	; 0x15a <DIO_pinWrite+0x14>
     162:	bf 01       	movw	r22, r30
     164:	64 2b       	or	r22, r20
     166:	fc 01       	movw	r30, r24
     168:	62 83       	std	Z+2, r22	; 0x02
		break;
     16a:	08 95       	ret
		case LOW:
		CLEARBIT(Dio->port.allRegister,pinNum);
     16c:	fc 01       	movw	r30, r24
     16e:	42 81       	ldd	r20, Z+2	; 0x02
     170:	21 e0       	ldi	r18, 0x01	; 1
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	f9 01       	movw	r30, r18
     176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_pinWrite+0x36>
     178:	ee 0f       	add	r30, r30
     17a:	ff 1f       	adc	r31, r31
     17c:	6a 95       	dec	r22
     17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_pinWrite+0x32>
     180:	bf 01       	movw	r22, r30
     182:	60 95       	com	r22
     184:	64 23       	and	r22, r20
     186:	fc 01       	movw	r30, r24
     188:	62 83       	std	Z+2, r22	; 0x02
     18a:	08 95       	ret

0000018c <DIO_pinRead>:

digitalState DIO_pinRead(DIO_Struct * Dio, pinNumber pinNum)
{
	digitalState returnvar = LOW;
	
	switch(READBIT(Dio->pin.allRegister,pinNum))
     18c:	fc 01       	movw	r30, r24
     18e:	80 81       	ld	r24, Z
     190:	21 e0       	ldi	r18, 0x01	; 1
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	06 2e       	mov	r0, r22
     196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_pinRead+0x10>
     198:	22 0f       	add	r18, r18
     19a:	33 1f       	adc	r19, r19
     19c:	0a 94       	dec	r0
     19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_pinRead+0xc>
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	82 23       	and	r24, r18
     1a4:	93 23       	and	r25, r19
     1a6:	9c 01       	movw	r18, r24
     1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_pinRead+0x22>
     1aa:	35 95       	asr	r19
     1ac:	27 95       	ror	r18
     1ae:	6a 95       	dec	r22
     1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_pinRead+0x1e>
     1b2:	21 30       	cpi	r18, 0x01	; 1
     1b4:	31 05       	cpc	r19, r1
     1b6:	11 f0       	breq	.+4      	; 0x1bc <DIO_pinRead+0x30>
	}
}

digitalState DIO_pinRead(DIO_Struct * Dio, pinNumber pinNum)
{
	digitalState returnvar = LOW;
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	08 95       	ret
	{
		case LOW:
		returnvar = LOW;
		break;
		case HIGH:
		returnvar = HIGH;
     1bc:	81 e0       	ldi	r24, 0x01	; 1
		break;
		default:
		break;
	}
	return returnvar;
}
     1be:	08 95       	ret

000001c0 <__vector_1>:
void (*volatile EXTINT2_FunctionPtr)(void)=NULL_Ptr;

/***************************************** AVR External Interrupt ISRs ************************************************/

ISR(INT0VECTOR)
{
     1c0:	1f 92       	push	r1
     1c2:	0f 92       	push	r0
     1c4:	0f b6       	in	r0, 0x3f	; 63
     1c6:	0f 92       	push	r0
     1c8:	11 24       	eor	r1, r1
     1ca:	2f 93       	push	r18
     1cc:	3f 93       	push	r19
     1ce:	4f 93       	push	r20
     1d0:	5f 93       	push	r21
     1d2:	6f 93       	push	r22
     1d4:	7f 93       	push	r23
     1d6:	8f 93       	push	r24
     1d8:	9f 93       	push	r25
     1da:	af 93       	push	r26
     1dc:	bf 93       	push	r27
     1de:	ef 93       	push	r30
     1e0:	ff 93       	push	r31
	/*This check as if the interrupt happened and the function isn't handled the code will stuck as it point to NULL_Ptr*/
	if (EXTINT0_FunctionPtr != NULL_Ptr)
     1e2:	80 91 a4 00 	lds	r24, 0x00A4
     1e6:	90 91 a5 00 	lds	r25, 0x00A5
     1ea:	89 2b       	or	r24, r25
     1ec:	29 f0       	breq	.+10     	; 0x1f8 <__vector_1+0x38>
	{
		EXTINT0_FunctionPtr();
     1ee:	e0 91 a4 00 	lds	r30, 0x00A4
     1f2:	f0 91 a5 00 	lds	r31, 0x00A5
     1f6:	09 95       	icall
	}
}
     1f8:	ff 91       	pop	r31
     1fa:	ef 91       	pop	r30
     1fc:	bf 91       	pop	r27
     1fe:	af 91       	pop	r26
     200:	9f 91       	pop	r25
     202:	8f 91       	pop	r24
     204:	7f 91       	pop	r23
     206:	6f 91       	pop	r22
     208:	5f 91       	pop	r21
     20a:	4f 91       	pop	r20
     20c:	3f 91       	pop	r19
     20e:	2f 91       	pop	r18
     210:	0f 90       	pop	r0
     212:	0f be       	out	0x3f, r0	; 63
     214:	0f 90       	pop	r0
     216:	1f 90       	pop	r1
     218:	18 95       	reti

0000021a <__vector_2>:

ISR(INT1VECTOR)
{
     21a:	1f 92       	push	r1
     21c:	0f 92       	push	r0
     21e:	0f b6       	in	r0, 0x3f	; 63
     220:	0f 92       	push	r0
     222:	11 24       	eor	r1, r1
     224:	2f 93       	push	r18
     226:	3f 93       	push	r19
     228:	4f 93       	push	r20
     22a:	5f 93       	push	r21
     22c:	6f 93       	push	r22
     22e:	7f 93       	push	r23
     230:	8f 93       	push	r24
     232:	9f 93       	push	r25
     234:	af 93       	push	r26
     236:	bf 93       	push	r27
     238:	ef 93       	push	r30
     23a:	ff 93       	push	r31
		if (EXTINT1_FunctionPtr != NULL_Ptr)
     23c:	80 91 a2 00 	lds	r24, 0x00A2
     240:	90 91 a3 00 	lds	r25, 0x00A3
     244:	89 2b       	or	r24, r25
     246:	29 f0       	breq	.+10     	; 0x252 <__vector_2+0x38>
		{
			EXTINT1_FunctionPtr();
     248:	e0 91 a2 00 	lds	r30, 0x00A2
     24c:	f0 91 a3 00 	lds	r31, 0x00A3
     250:	09 95       	icall
		}	
}
     252:	ff 91       	pop	r31
     254:	ef 91       	pop	r30
     256:	bf 91       	pop	r27
     258:	af 91       	pop	r26
     25a:	9f 91       	pop	r25
     25c:	8f 91       	pop	r24
     25e:	7f 91       	pop	r23
     260:	6f 91       	pop	r22
     262:	5f 91       	pop	r21
     264:	4f 91       	pop	r20
     266:	3f 91       	pop	r19
     268:	2f 91       	pop	r18
     26a:	0f 90       	pop	r0
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	0f 90       	pop	r0
     270:	1f 90       	pop	r1
     272:	18 95       	reti

00000274 <__vector_3>:

ISR(INT2VECTOR)
{
     274:	1f 92       	push	r1
     276:	0f 92       	push	r0
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	0f 92       	push	r0
     27c:	11 24       	eor	r1, r1
     27e:	2f 93       	push	r18
     280:	3f 93       	push	r19
     282:	4f 93       	push	r20
     284:	5f 93       	push	r21
     286:	6f 93       	push	r22
     288:	7f 93       	push	r23
     28a:	8f 93       	push	r24
     28c:	9f 93       	push	r25
     28e:	af 93       	push	r26
     290:	bf 93       	push	r27
     292:	ef 93       	push	r30
     294:	ff 93       	push	r31
	if (EXTINT2_FunctionPtr != NULL_Ptr)
     296:	80 91 a0 00 	lds	r24, 0x00A0
     29a:	90 91 a1 00 	lds	r25, 0x00A1
     29e:	89 2b       	or	r24, r25
     2a0:	29 f0       	breq	.+10     	; 0x2ac <__vector_3+0x38>
	{
		EXTINT2_FunctionPtr();
     2a2:	e0 91 a0 00 	lds	r30, 0x00A0
     2a6:	f0 91 a1 00 	lds	r31, 0x00A1
     2aa:	09 95       	icall
	}	
}
     2ac:	ff 91       	pop	r31
     2ae:	ef 91       	pop	r30
     2b0:	bf 91       	pop	r27
     2b2:	af 91       	pop	r26
     2b4:	9f 91       	pop	r25
     2b6:	8f 91       	pop	r24
     2b8:	7f 91       	pop	r23
     2ba:	6f 91       	pop	r22
     2bc:	5f 91       	pop	r21
     2be:	4f 91       	pop	r20
     2c0:	3f 91       	pop	r19
     2c2:	2f 91       	pop	r18
     2c4:	0f 90       	pop	r0
     2c6:	0f be       	out	0x3f, r0	; 63
     2c8:	0f 90       	pop	r0
     2ca:	1f 90       	pop	r1
     2cc:	18 95       	reti

000002ce <ExternalInterrupt_Configure>:
/***************************************** External Interrupt Functions ************************************************/


	void ExternalInterrupt_Configure(ExtInt_Number IntNumber,ExtInt_Mode Mode)
	{
		switch(IntNumber)
     2ce:	81 30       	cpi	r24, 0x01	; 1
     2d0:	79 f1       	breq	.+94     	; 0x330 <ExternalInterrupt_Configure+0x62>
     2d2:	20 f0       	brcs	.+8      	; 0x2dc <ExternalInterrupt_Configure+0xe>
     2d4:	82 30       	cpi	r24, 0x02	; 2
     2d6:	09 f4       	brne	.+2      	; 0x2da <ExternalInterrupt_Configure+0xc>
     2d8:	55 c0       	rjmp	.+170    	; 0x384 <ExternalInterrupt_Configure+0xb6>
     2da:	08 95       	ret
		{
			case EXTINT0:
			/* Disable Int0 >> as the worest case senario when the int is falling and I need it logical change 
			so while conversion the low mode will be active*/      
			ATMEGA32_GICR->bits.b6=LOW;
     2dc:	8b b7       	in	r24, 0x3b	; 59
     2de:	8f 7b       	andi	r24, 0xBF	; 191
     2e0:	8b bf       	out	0x3b, r24	; 59
									
			/* Configure Int0 */
			switch (Mode)
     2e2:	61 30       	cpi	r22, 0x01	; 1
     2e4:	d9 f0       	breq	.+54     	; 0x31c <ExternalInterrupt_Configure+0x4e>
     2e6:	28 f0       	brcs	.+10     	; 0x2f2 <ExternalInterrupt_Configure+0x24>
     2e8:	62 30       	cpi	r22, 0x02	; 2
     2ea:	89 f0       	breq	.+34     	; 0x30e <ExternalInterrupt_Configure+0x40>
     2ec:	63 30       	cpi	r22, 0x03	; 3
     2ee:	41 f0       	breq	.+16     	; 0x300 <ExternalInterrupt_Configure+0x32>
     2f0:	1b c0       	rjmp	.+54     	; 0x328 <ExternalInterrupt_Configure+0x5a>
			{
				case EXTINT_LOWLVL:
				ATMEGA32A_MCUCR->bits.b0=LOW;					/* for data sheet ICS0 table */
     2f2:	85 b7       	in	r24, 0x35	; 53
     2f4:	8e 7f       	andi	r24, 0xFE	; 254
     2f6:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b1=LOW;
     2f8:	85 b7       	in	r24, 0x35	; 53
     2fa:	8d 7f       	andi	r24, 0xFD	; 253
     2fc:	85 bf       	out	0x35, r24	; 53
				break;
     2fe:	14 c0       	rjmp	.+40     	; 0x328 <ExternalInterrupt_Configure+0x5a>
				case EXTINT_BOTHEDGE:
				ATMEGA32A_MCUCR->bits.b0=HIGH;
     300:	85 b7       	in	r24, 0x35	; 53
     302:	81 60       	ori	r24, 0x01	; 1
     304:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b1=LOW;
     306:	85 b7       	in	r24, 0x35	; 53
     308:	8d 7f       	andi	r24, 0xFD	; 253
     30a:	85 bf       	out	0x35, r24	; 53
				break;
     30c:	0d c0       	rjmp	.+26     	; 0x328 <ExternalInterrupt_Configure+0x5a>
				case EXTINT_FALLING:
				ATMEGA32A_MCUCR->bits.b0=LOW;
     30e:	85 b7       	in	r24, 0x35	; 53
     310:	8e 7f       	andi	r24, 0xFE	; 254
     312:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b1=HIGH;
     314:	85 b7       	in	r24, 0x35	; 53
     316:	82 60       	ori	r24, 0x02	; 2
     318:	85 bf       	out	0x35, r24	; 53
				break;
     31a:	06 c0       	rjmp	.+12     	; 0x328 <ExternalInterrupt_Configure+0x5a>
				case EXTINT_RISING:
				ATMEGA32A_MCUCR->bits.b0=HIGH;
     31c:	85 b7       	in	r24, 0x35	; 53
     31e:	81 60       	ori	r24, 0x01	; 1
     320:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b1=HIGH;
     322:	85 b7       	in	r24, 0x35	; 53
     324:	82 60       	ori	r24, 0x02	; 2
     326:	85 bf       	out	0x35, r24	; 53
				break;
				default:
				break;
			}
			// Enable int0
			ATMEGA32_GICR->bits.b6=HIGH;
     328:	8b b7       	in	r24, 0x3b	; 59
     32a:	80 64       	ori	r24, 0x40	; 64
     32c:	8b bf       	out	0x3b, r24	; 59
			break;
     32e:	08 95       	ret
			
			case EXTINT1:
			ATMEGA32_GICR->bits.b7=LOW;
     330:	8b b7       	in	r24, 0x3b	; 59
     332:	8f 77       	andi	r24, 0x7F	; 127
     334:	8b bf       	out	0x3b, r24	; 59
			switch (Mode)
     336:	61 30       	cpi	r22, 0x01	; 1
     338:	d9 f0       	breq	.+54     	; 0x370 <ExternalInterrupt_Configure+0xa2>
     33a:	28 f0       	brcs	.+10     	; 0x346 <ExternalInterrupt_Configure+0x78>
     33c:	62 30       	cpi	r22, 0x02	; 2
     33e:	89 f0       	breq	.+34     	; 0x362 <ExternalInterrupt_Configure+0x94>
     340:	63 30       	cpi	r22, 0x03	; 3
     342:	41 f0       	breq	.+16     	; 0x354 <ExternalInterrupt_Configure+0x86>
     344:	1b c0       	rjmp	.+54     	; 0x37c <ExternalInterrupt_Configure+0xae>
			{
				case EXTINT_LOWLVL:
				ATMEGA32A_MCUCR->bits.b2=LOW;
     346:	85 b7       	in	r24, 0x35	; 53
     348:	8b 7f       	andi	r24, 0xFB	; 251
     34a:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b3=LOW;
     34c:	85 b7       	in	r24, 0x35	; 53
     34e:	87 7f       	andi	r24, 0xF7	; 247
     350:	85 bf       	out	0x35, r24	; 53
				break;
     352:	14 c0       	rjmp	.+40     	; 0x37c <ExternalInterrupt_Configure+0xae>
				case EXTINT_BOTHEDGE:
				ATMEGA32A_MCUCR->bits.b2=HIGH;
     354:	85 b7       	in	r24, 0x35	; 53
     356:	84 60       	ori	r24, 0x04	; 4
     358:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b3=LOW;
     35a:	85 b7       	in	r24, 0x35	; 53
     35c:	87 7f       	andi	r24, 0xF7	; 247
     35e:	85 bf       	out	0x35, r24	; 53
				break;
     360:	0d c0       	rjmp	.+26     	; 0x37c <ExternalInterrupt_Configure+0xae>
				case EXTINT_FALLING:
				ATMEGA32A_MCUCR->bits.b2=LOW;
     362:	85 b7       	in	r24, 0x35	; 53
     364:	8b 7f       	andi	r24, 0xFB	; 251
     366:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b3=HIGH;
     368:	85 b7       	in	r24, 0x35	; 53
     36a:	88 60       	ori	r24, 0x08	; 8
     36c:	85 bf       	out	0x35, r24	; 53
				break;
     36e:	06 c0       	rjmp	.+12     	; 0x37c <ExternalInterrupt_Configure+0xae>
				case EXTINT_RISING:
				ATMEGA32A_MCUCR->bits.b2=HIGH;
     370:	85 b7       	in	r24, 0x35	; 53
     372:	84 60       	ori	r24, 0x04	; 4
     374:	85 bf       	out	0x35, r24	; 53
				ATMEGA32A_MCUCR->bits.b3=HIGH;
     376:	85 b7       	in	r24, 0x35	; 53
     378:	88 60       	ori	r24, 0x08	; 8
     37a:	85 bf       	out	0x35, r24	; 53
				break;
				default:
				break;
			}
			ATMEGA32_GICR->bits.b7=HIGH;
     37c:	8b b7       	in	r24, 0x3b	; 59
     37e:	80 68       	ori	r24, 0x80	; 128
     380:	8b bf       	out	0x3b, r24	; 59
			break;
     382:	08 95       	ret
			
			case EXTINT2:
			ATMEGA32_GICR->bits.b5=LOW;
     384:	8b b7       	in	r24, 0x3b	; 59
     386:	8f 7d       	andi	r24, 0xDF	; 223
     388:	8b bf       	out	0x3b, r24	; 59
			switch (Mode)
     38a:	61 30       	cpi	r22, 0x01	; 1
     38c:	31 f0       	breq	.+12     	; 0x39a <ExternalInterrupt_Configure+0xcc>
     38e:	62 30       	cpi	r22, 0x02	; 2
     390:	39 f4       	brne	.+14     	; 0x3a0 <ExternalInterrupt_Configure+0xd2>
			{
				case EXTINT_FALLING:
				ATMEGA32_MCUCSR->bits.b6=LOW;
     392:	84 b7       	in	r24, 0x34	; 52
     394:	8f 7b       	andi	r24, 0xBF	; 191
     396:	84 bf       	out	0x34, r24	; 52
				break;
     398:	03 c0       	rjmp	.+6      	; 0x3a0 <ExternalInterrupt_Configure+0xd2>
				case EXTINT_RISING:
				ATMEGA32_MCUCSR->bits.b6=HIGH;
     39a:	84 b7       	in	r24, 0x34	; 52
     39c:	80 64       	ori	r24, 0x40	; 64
     39e:	84 bf       	out	0x34, r24	; 52
				case EXTINT_LOWLVL:
				case EXTINT_BOTHEDGE:
				default:	  
				break;
			}
			ATMEGA32_GICR->bits.b5=HIGH;
     3a0:	8b b7       	in	r24, 0x3b	; 59
     3a2:	80 62       	ori	r24, 0x20	; 32
     3a4:	8b bf       	out	0x3b, r24	; 59
     3a6:	08 95       	ret

000003a8 <LEDSetup>:
	#define portHigh    (0xFF)
	#define portLow    (0x00)
	
	
	void LEDSetup(ledDatatype led)
	{
     3a8:	26 2f       	mov	r18, r22
		DIO_pinConfigure(led.LED_Dio,led.LED_pin,OUTPUT);
     3aa:	42 e0       	ldi	r20, 0x02	; 2
     3ac:	68 2f       	mov	r22, r24
     3ae:	82 2f       	mov	r24, r18
     3b0:	97 2f       	mov	r25, r23
     3b2:	0e 94 6b 00 	call	0xd6	; 0xd6 <DIO_pinConfigure>
     3b6:	08 95       	ret

000003b8 <LEDControl>:
	}
	
	void LEDControl(ledDatatype led, LEDstate state)
	{
     3b8:	1f 93       	push	r17
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	c8 2f       	mov	r28, r24
     3c0:	86 2f       	mov	r24, r22
     3c2:	97 2f       	mov	r25, r23
     3c4:	16 2f       	mov	r17, r22
     3c6:	d7 2f       	mov	r29, r23
		switch(state)
     3c8:	41 30       	cpi	r20, 0x01	; 1
     3ca:	51 f0       	breq	.+20     	; 0x3e0 <LEDControl+0x28>
     3cc:	18 f0       	brcs	.+6      	; 0x3d4 <LEDControl+0x1c>
     3ce:	42 30       	cpi	r20, 0x02	; 2
     3d0:	61 f0       	breq	.+24     	; 0x3ea <LEDControl+0x32>
     3d2:	17 c0       	rjmp	.+46     	; 0x402 <LEDControl+0x4a>
		{
			// LED_OFF is the same as LED_ON_REVERSED
			case LED_OFF:
			DIO_pinWrite(led.LED_Dio,led.LED_pin,LOW);
     3d4:	40 e0       	ldi	r20, 0x00	; 0
     3d6:	6c 2f       	mov	r22, r28
     3d8:	97 2f       	mov	r25, r23
     3da:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_pinWrite>
			break;
     3de:	11 c0       	rjmp	.+34     	; 0x402 <LEDControl+0x4a>
			case LED_ON:
			DIO_pinWrite(led.LED_Dio,led.LED_pin,HIGH);
     3e0:	41 e0       	ldi	r20, 0x01	; 1
     3e2:	6c 2f       	mov	r22, r28
     3e4:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_pinWrite>
			break;
     3e8:	0c c0       	rjmp	.+24     	; 0x402 <LEDControl+0x4a>
			case LED_TOGGLE:
			DIO_pinWrite(led.LED_Dio,led.LED_pin,!DIO_pinRead(led.LED_Dio,led.LED_pin));
     3ea:	6c 2f       	mov	r22, r28
     3ec:	97 2f       	mov	r25, r23
     3ee:	0e 94 c6 00 	call	0x18c	; 0x18c <DIO_pinRead>
     3f2:	41 e0       	ldi	r20, 0x01	; 1
     3f4:	81 11       	cpse	r24, r1
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	6c 2f       	mov	r22, r28
     3fa:	81 2f       	mov	r24, r17
     3fc:	9d 2f       	mov	r25, r29
     3fe:	0e 94 a3 00 	call	0x146	; 0x146 <DIO_pinWrite>
			break;
			default:
			break;
		}	
	}
     402:	df 91       	pop	r29
     404:	cf 91       	pop	r28
     406:	1f 91       	pop	r17
     408:	08 95       	ret

0000040a <ButtonSw_Setup>:
#include "Push.h"

#define BUTTON_BOUNCE_PERIOD_mS	(60)

void ButtonSw_Setup(ButtonSw_datatype * Button)
{
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
     40e:	ec 01       	movw	r28, r24
	switch(Button->InputMode)
     410:	8b 81       	ldd	r24, Y+3	; 0x03
     412:	88 23       	and	r24, r24
     414:	19 f0       	breq	.+6      	; 0x41c <ButtonSw_Setup+0x12>
     416:	81 30       	cpi	r24, 0x01	; 1
     418:	41 f0       	breq	.+16     	; 0x42a <ButtonSw_Setup+0x20>
     41a:	0d c0       	rjmp	.+26     	; 0x436 <ButtonSw_Setup+0x2c>
	{
		case INPUT_FLOAT:
		DIO_pinConfigure(Button->Button_Dio,Button->Button_Pin,INPUT_FLOAT);
     41c:	40 e0       	ldi	r20, 0x00	; 0
     41e:	6a 81       	ldd	r22, Y+2	; 0x02
     420:	88 81       	ld	r24, Y
     422:	99 81       	ldd	r25, Y+1	; 0x01
     424:	0e 94 6b 00 	call	0xd6	; 0xd6 <DIO_pinConfigure>
		break;
     428:	06 c0       	rjmp	.+12     	; 0x436 <ButtonSw_Setup+0x2c>
		case INPUT_PULLUP:
		DIO_pinConfigure(Button->Button_Dio,Button->Button_Pin,INPUT_PULLUP);
     42a:	41 e0       	ldi	r20, 0x01	; 1
     42c:	6a 81       	ldd	r22, Y+2	; 0x02
     42e:	88 81       	ld	r24, Y
     430:	99 81       	ldd	r25, Y+1	; 0x01
     432:	0e 94 6b 00 	call	0xd6	; 0xd6 <DIO_pinConfigure>
		break;
		default:
		break;
	}
	Button->PrevButton_State = DIO_pinRead(Button->Button_Dio,Button->Button_Pin);
     436:	6a 81       	ldd	r22, Y+2	; 0x02
     438:	88 81       	ld	r24, Y
     43a:	99 81       	ldd	r25, Y+1	; 0x01
     43c:	0e 94 c6 00 	call	0x18c	; 0x18c <DIO_pinRead>
     440:	8c 83       	std	Y+4, r24	; 0x04
}
     442:	df 91       	pop	r29
     444:	cf 91       	pop	r28
     446:	08 95       	ret

00000448 <ButtonSw_Interrupt>:
*/


void ButtonSw_Interrupt(ExtInt_Number INTNumber,ExtInt_Mode INTMode)
{
	GLOBAL_INTERRUPT_ENABLE();
     448:	9f b7       	in	r25, 0x3f	; 63
     44a:	90 68       	ori	r25, 0x80	; 128
     44c:	9f bf       	out	0x3f, r25	; 63
	ExternalInterrupt_Configure(INTNumber,INTMode);
     44e:	0e 94 67 01 	call	0x2ce	; 0x2ce <ExternalInterrupt_Configure>
     452:	08 95       	ret

00000454 <ISR_ResetGame>:
		EXTINT1_FunctionPtr = ISR_Player2Leds;
	}
	
	void ISR_ResetGame(void)
	{
		counter1=0;
     454:	10 92 a7 00 	sts	0x00A7, r1
		counter2=0;
     458:	10 92 a6 00 	sts	0x00A6, r1
		ATMEGA32_GICR->bits.b6=1;
     45c:	8b b7       	in	r24, 0x3b	; 59
     45e:	80 64       	ori	r24, 0x40	; 64
     460:	8b bf       	out	0x3b, r24	; 59
		ATMEGA32_GICR->bits.b7=1;
     462:	8b b7       	in	r24, 0x3b	; 59
     464:	80 68       	ori	r24, 0x80	; 128
     466:	8b bf       	out	0x3b, r24	; 59
     468:	08 95       	ret

0000046a <ISR_Player1Leds>:
	}
	
	void ISR_Player1Leds(void)
	{
		
		switch(counter1)
     46a:	80 91 a7 00 	lds	r24, 0x00A7
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	88 30       	cpi	r24, 0x08	; 8
     472:	91 05       	cpc	r25, r1
     474:	08 f0       	brcs	.+2      	; 0x478 <ISR_Player1Leds+0xe>
     476:	5d c0       	rjmp	.+186    	; 0x532 <ISR_Player1Leds+0xc8>
     478:	fc 01       	movw	r30, r24
     47a:	e6 5d       	subi	r30, 0xD6	; 214
     47c:	ff 4f       	sbci	r31, 0xFF	; 255
     47e:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__tablejump2__>
		{
			case 0:
			counter1++;
     482:	80 91 a7 00 	lds	r24, 0x00A7
     486:	8f 5f       	subi	r24, 0xFF	; 255
     488:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     48c:	80 91 a6 00 	lds	r24, 0x00A6
     490:	81 50       	subi	r24, 0x01	; 1
     492:	80 93 a6 00 	sts	0x00A6, r24
			break;
     496:	08 95       	ret
			case 1:
			counter1++;
     498:	80 91 a7 00 	lds	r24, 0x00A7
     49c:	8f 5f       	subi	r24, 0xFF	; 255
     49e:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     4a2:	80 91 a6 00 	lds	r24, 0x00A6
     4a6:	81 50       	subi	r24, 0x01	; 1
     4a8:	80 93 a6 00 	sts	0x00A6, r24
			break;
     4ac:	08 95       	ret
			case 2:
			counter1++;
     4ae:	80 91 a7 00 	lds	r24, 0x00A7
     4b2:	8f 5f       	subi	r24, 0xFF	; 255
     4b4:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     4b8:	80 91 a6 00 	lds	r24, 0x00A6
     4bc:	81 50       	subi	r24, 0x01	; 1
     4be:	80 93 a6 00 	sts	0x00A6, r24
			break;
     4c2:	08 95       	ret
			case 3:
			counter1++;
     4c4:	80 91 a7 00 	lds	r24, 0x00A7
     4c8:	8f 5f       	subi	r24, 0xFF	; 255
     4ca:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     4ce:	80 91 a6 00 	lds	r24, 0x00A6
     4d2:	81 50       	subi	r24, 0x01	; 1
     4d4:	80 93 a6 00 	sts	0x00A6, r24
			break;
     4d8:	08 95       	ret
			case 4:
			counter1++;
     4da:	80 91 a7 00 	lds	r24, 0x00A7
     4de:	8f 5f       	subi	r24, 0xFF	; 255
     4e0:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     4e4:	80 91 a6 00 	lds	r24, 0x00A6
     4e8:	81 50       	subi	r24, 0x01	; 1
     4ea:	80 93 a6 00 	sts	0x00A6, r24
			break;
     4ee:	08 95       	ret
			case 5:
			counter1++;
     4f0:	80 91 a7 00 	lds	r24, 0x00A7
     4f4:	8f 5f       	subi	r24, 0xFF	; 255
     4f6:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     4fa:	80 91 a6 00 	lds	r24, 0x00A6
     4fe:	81 50       	subi	r24, 0x01	; 1
     500:	80 93 a6 00 	sts	0x00A6, r24
			break;
     504:	08 95       	ret
			case 6:
			counter1++;
     506:	80 91 a7 00 	lds	r24, 0x00A7
     50a:	8f 5f       	subi	r24, 0xFF	; 255
     50c:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     510:	80 91 a6 00 	lds	r24, 0x00A6
     514:	81 50       	subi	r24, 0x01	; 1
     516:	80 93 a6 00 	sts	0x00A6, r24
			break;
     51a:	08 95       	ret
			case 7:
			counter1++;
     51c:	80 91 a7 00 	lds	r24, 0x00A7
     520:	8f 5f       	subi	r24, 0xFF	; 255
     522:	80 93 a7 00 	sts	0x00A7, r24
			counter2--;
     526:	80 91 a6 00 	lds	r24, 0x00A6
     52a:	81 50       	subi	r24, 0x01	; 1
     52c:	80 93 a6 00 	sts	0x00A6, r24
			break;
     530:	08 95       	ret
			default:
			counter1++;
     532:	80 91 a7 00 	lds	r24, 0x00A7
     536:	8f 5f       	subi	r24, 0xFF	; 255
     538:	80 93 a7 00 	sts	0x00A7, r24
     53c:	08 95       	ret

0000053e <ISR_Player2Leds>:
	
	
	void ISR_Player2Leds(void)
	{
		
		switch(counter2)
     53e:	80 91 a6 00 	lds	r24, 0x00A6
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	88 30       	cpi	r24, 0x08	; 8
     546:	91 05       	cpc	r25, r1
     548:	08 f0       	brcs	.+2      	; 0x54c <ISR_Player2Leds+0xe>
     54a:	5d c0       	rjmp	.+186    	; 0x606 <ISR_Player2Leds+0xc8>
     54c:	fc 01       	movw	r30, r24
     54e:	ee 5c       	subi	r30, 0xCE	; 206
     550:	ff 4f       	sbci	r31, 0xFF	; 255
     552:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__tablejump2__>
		{
			case 0:
			counter2++;
     556:	80 91 a6 00 	lds	r24, 0x00A6
     55a:	8f 5f       	subi	r24, 0xFF	; 255
     55c:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     560:	80 91 a7 00 	lds	r24, 0x00A7
     564:	81 50       	subi	r24, 0x01	; 1
     566:	80 93 a7 00 	sts	0x00A7, r24
			break;
     56a:	08 95       	ret
			case 1:
			counter2++;
     56c:	80 91 a6 00 	lds	r24, 0x00A6
     570:	8f 5f       	subi	r24, 0xFF	; 255
     572:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     576:	80 91 a7 00 	lds	r24, 0x00A7
     57a:	81 50       	subi	r24, 0x01	; 1
     57c:	80 93 a7 00 	sts	0x00A7, r24
			break;
     580:	08 95       	ret
			case 2:
			counter2++;
     582:	80 91 a6 00 	lds	r24, 0x00A6
     586:	8f 5f       	subi	r24, 0xFF	; 255
     588:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     58c:	80 91 a7 00 	lds	r24, 0x00A7
     590:	81 50       	subi	r24, 0x01	; 1
     592:	80 93 a7 00 	sts	0x00A7, r24
			break;
     596:	08 95       	ret
			case 3:
			counter2++;
     598:	80 91 a6 00 	lds	r24, 0x00A6
     59c:	8f 5f       	subi	r24, 0xFF	; 255
     59e:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     5a2:	80 91 a7 00 	lds	r24, 0x00A7
     5a6:	81 50       	subi	r24, 0x01	; 1
     5a8:	80 93 a7 00 	sts	0x00A7, r24
			break;
     5ac:	08 95       	ret
			case 4:
			counter2++;
     5ae:	80 91 a6 00 	lds	r24, 0x00A6
     5b2:	8f 5f       	subi	r24, 0xFF	; 255
     5b4:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     5b8:	80 91 a7 00 	lds	r24, 0x00A7
     5bc:	81 50       	subi	r24, 0x01	; 1
     5be:	80 93 a7 00 	sts	0x00A7, r24
			break;
     5c2:	08 95       	ret
			case 5:
			counter2++;
     5c4:	80 91 a6 00 	lds	r24, 0x00A6
     5c8:	8f 5f       	subi	r24, 0xFF	; 255
     5ca:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     5ce:	80 91 a7 00 	lds	r24, 0x00A7
     5d2:	81 50       	subi	r24, 0x01	; 1
     5d4:	80 93 a7 00 	sts	0x00A7, r24
			break;
     5d8:	08 95       	ret
			case 6:
			counter2++;
     5da:	80 91 a6 00 	lds	r24, 0x00A6
     5de:	8f 5f       	subi	r24, 0xFF	; 255
     5e0:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     5e4:	80 91 a7 00 	lds	r24, 0x00A7
     5e8:	81 50       	subi	r24, 0x01	; 1
     5ea:	80 93 a7 00 	sts	0x00A7, r24
			break;
     5ee:	08 95       	ret
			case 7:
			counter2++;
     5f0:	80 91 a6 00 	lds	r24, 0x00A6
     5f4:	8f 5f       	subi	r24, 0xFF	; 255
     5f6:	80 93 a6 00 	sts	0x00A6, r24
			counter1--;
     5fa:	80 91 a7 00 	lds	r24, 0x00A7
     5fe:	81 50       	subi	r24, 0x01	; 1
     600:	80 93 a7 00 	sts	0x00A7, r24
			break;
     604:	08 95       	ret
			default:
			counter2++;
     606:	80 91 a6 00 	lds	r24, 0x00A6
     60a:	8f 5f       	subi	r24, 0xFF	; 255
     60c:	80 93 a6 00 	sts	0x00A6, r24
     610:	08 95       	ret

00000612 <ResetGame>:
	ButtonSw_datatype Player1Button = {DIOD,PIN2,INPUT_PULLUP,LOW};
	ButtonSw_datatype Player2Button = {DIOD,PIN3,INPUT_PULLUP,LOW};	
	
	void ResetGame(void)
	{
		ButtonSw_Setup(&ResetButton);
     612:	8a e6       	ldi	r24, 0x6A	; 106
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	0e 94 05 02 	call	0x40a	; 0x40a <ButtonSw_Setup>
		ButtonSw_Interrupt(EXTINT2,EXTINT_RISING);
     61a:	61 e0       	ldi	r22, 0x01	; 1
     61c:	82 e0       	ldi	r24, 0x02	; 2
     61e:	0e 94 24 02 	call	0x448	; 0x448 <ButtonSw_Interrupt>
		EXTINT2_FunctionPtr = ISR_ResetGame;
     622:	8a e2       	ldi	r24, 0x2A	; 42
     624:	92 e0       	ldi	r25, 0x02	; 2
     626:	90 93 a1 00 	sts	0x00A1, r25
     62a:	80 93 a0 00 	sts	0x00A0, r24
     62e:	08 95       	ret

00000630 <Player1_initiate>:
	}
	
	void Player1_initiate (void)
	{
		LEDSetup(Player1Led1);
     630:	60 91 9c 00 	lds	r22, 0x009C
     634:	70 91 9d 00 	lds	r23, 0x009D
     638:	80 91 9e 00 	lds	r24, 0x009E
     63c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player1Led2);
     640:	60 91 99 00 	lds	r22, 0x0099
     644:	70 91 9a 00 	lds	r23, 0x009A
     648:	80 91 9b 00 	lds	r24, 0x009B
     64c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player1Led3);
     650:	60 91 96 00 	lds	r22, 0x0096
     654:	70 91 97 00 	lds	r23, 0x0097
     658:	80 91 98 00 	lds	r24, 0x0098
     65c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player1Led4);
     660:	60 91 93 00 	lds	r22, 0x0093
     664:	70 91 94 00 	lds	r23, 0x0094
     668:	80 91 95 00 	lds	r24, 0x0095
     66c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player1Led5);
     670:	60 91 90 00 	lds	r22, 0x0090
     674:	70 91 91 00 	lds	r23, 0x0091
     678:	80 91 92 00 	lds	r24, 0x0092
     67c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player1Led6);
     680:	60 91 8d 00 	lds	r22, 0x008D
     684:	70 91 8e 00 	lds	r23, 0x008E
     688:	80 91 8f 00 	lds	r24, 0x008F
     68c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player1Led7);
     690:	60 91 8a 00 	lds	r22, 0x008A
     694:	70 91 8b 00 	lds	r23, 0x008B
     698:	80 91 8c 00 	lds	r24, 0x008C
     69c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player1Led8); 
     6a0:	60 91 87 00 	lds	r22, 0x0087
     6a4:	70 91 88 00 	lds	r23, 0x0088
     6a8:	80 91 89 00 	lds	r24, 0x0089
     6ac:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		
		ButtonSw_Setup(&Player1Button);
     6b0:	85 e6       	ldi	r24, 0x65	; 101
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0e 94 05 02 	call	0x40a	; 0x40a <ButtonSw_Setup>
		ButtonSw_Interrupt(EXTINT0,EXTINT_RISING);
     6b8:	61 e0       	ldi	r22, 0x01	; 1
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	0e 94 24 02 	call	0x448	; 0x448 <ButtonSw_Interrupt>
		EXTINT0_FunctionPtr = ISR_Player1Leds;
     6c0:	85 e3       	ldi	r24, 0x35	; 53
     6c2:	92 e0       	ldi	r25, 0x02	; 2
     6c4:	90 93 a5 00 	sts	0x00A5, r25
     6c8:	80 93 a4 00 	sts	0x00A4, r24
     6cc:	08 95       	ret

000006ce <Player2_initiate>:
	}


	void Player2_initiate (void)
	{
		LEDSetup(Player2Led1);
     6ce:	60 91 84 00 	lds	r22, 0x0084
     6d2:	70 91 85 00 	lds	r23, 0x0085
     6d6:	80 91 86 00 	lds	r24, 0x0086
     6da:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player2Led2);
     6de:	60 91 81 00 	lds	r22, 0x0081
     6e2:	70 91 82 00 	lds	r23, 0x0082
     6e6:	80 91 83 00 	lds	r24, 0x0083
     6ea:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player2Led3);
     6ee:	60 91 7e 00 	lds	r22, 0x007E
     6f2:	70 91 7f 00 	lds	r23, 0x007F
     6f6:	80 91 80 00 	lds	r24, 0x0080
     6fa:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player2Led4);
     6fe:	60 91 7b 00 	lds	r22, 0x007B
     702:	70 91 7c 00 	lds	r23, 0x007C
     706:	80 91 7d 00 	lds	r24, 0x007D
     70a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player2Led5);
     70e:	60 91 78 00 	lds	r22, 0x0078
     712:	70 91 79 00 	lds	r23, 0x0079
     716:	80 91 7a 00 	lds	r24, 0x007A
     71a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player2Led6);
     71e:	60 91 75 00 	lds	r22, 0x0075
     722:	70 91 76 00 	lds	r23, 0x0076
     726:	80 91 77 00 	lds	r24, 0x0077
     72a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player2Led7);
     72e:	60 91 72 00 	lds	r22, 0x0072
     732:	70 91 73 00 	lds	r23, 0x0073
     736:	80 91 74 00 	lds	r24, 0x0074
     73a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		LEDSetup(Player2Led8);
     73e:	60 91 6f 00 	lds	r22, 0x006F
     742:	70 91 70 00 	lds	r23, 0x0070
     746:	80 91 71 00 	lds	r24, 0x0071
     74a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LEDSetup>
		
		ButtonSw_Setup(&Player2Button);
     74e:	80 e6       	ldi	r24, 0x60	; 96
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	0e 94 05 02 	call	0x40a	; 0x40a <ButtonSw_Setup>
		ButtonSw_Interrupt(EXTINT1,EXTINT_RISING);
     756:	61 e0       	ldi	r22, 0x01	; 1
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	0e 94 24 02 	call	0x448	; 0x448 <ButtonSw_Interrupt>
		EXTINT1_FunctionPtr = ISR_Player2Leds;
     75e:	8f e9       	ldi	r24, 0x9F	; 159
     760:	92 e0       	ldi	r25, 0x02	; 2
     762:	90 93 a3 00 	sts	0x00A3, r25
     766:	80 93 a2 00 	sts	0x00A2, r24
     76a:	08 95       	ret

0000076c <Led_Update>:
		}	
	}
	
	void Led_Update(void)
	{
		switch(counter1)
     76c:	80 91 a7 00 	lds	r24, 0x00A7
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	89 30       	cpi	r24, 0x09	; 9
     774:	91 05       	cpc	r25, r1
     776:	08 f0       	brcs	.+2      	; 0x77a <Led_Update+0xe>
     778:	f5 c2       	rjmp	.+1514   	; 0xd64 <__stack+0x505>
     77a:	fc 01       	movw	r30, r24
     77c:	e6 5c       	subi	r30, 0xC6	; 198
     77e:	ff 4f       	sbci	r31, 0xFF	; 255
     780:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__tablejump2__>
		{
			case 0:
			LEDControl(Player1Led1,LED_OFF);
     784:	60 91 9c 00 	lds	r22, 0x009C
     788:	70 91 9d 00 	lds	r23, 0x009D
     78c:	80 91 9e 00 	lds	r24, 0x009E
     790:	40 e0       	ldi	r20, 0x00	; 0
     792:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_OFF);
     796:	60 91 99 00 	lds	r22, 0x0099
     79a:	70 91 9a 00 	lds	r23, 0x009A
     79e:	80 91 9b 00 	lds	r24, 0x009B
     7a2:	40 e0       	ldi	r20, 0x00	; 0
     7a4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_OFF);
     7a8:	60 91 96 00 	lds	r22, 0x0096
     7ac:	70 91 97 00 	lds	r23, 0x0097
     7b0:	80 91 98 00 	lds	r24, 0x0098
     7b4:	40 e0       	ldi	r20, 0x00	; 0
     7b6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_OFF);
     7ba:	60 91 93 00 	lds	r22, 0x0093
     7be:	70 91 94 00 	lds	r23, 0x0094
     7c2:	80 91 95 00 	lds	r24, 0x0095
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_OFF);
     7cc:	60 91 90 00 	lds	r22, 0x0090
     7d0:	70 91 91 00 	lds	r23, 0x0091
     7d4:	80 91 92 00 	lds	r24, 0x0092
     7d8:	40 e0       	ldi	r20, 0x00	; 0
     7da:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_OFF);
     7de:	60 91 8d 00 	lds	r22, 0x008D
     7e2:	70 91 8e 00 	lds	r23, 0x008E
     7e6:	80 91 8f 00 	lds	r24, 0x008F
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     7f0:	60 91 8a 00 	lds	r22, 0x008A
     7f4:	70 91 8b 00 	lds	r23, 0x008B
     7f8:	80 91 8c 00 	lds	r24, 0x008C
     7fc:	40 e0       	ldi	r20, 0x00	; 0
     7fe:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     802:	60 91 87 00 	lds	r22, 0x0087
     806:	70 91 88 00 	lds	r23, 0x0088
     80a:	80 91 89 00 	lds	r24, 0x0089
     80e:	40 e0       	ldi	r20, 0x00	; 0
     810:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     814:	a7 c2       	rjmp	.+1358   	; 0xd64 <__stack+0x505>
			case 1:
			LEDControl(Player1Led1,LED_ON);
     816:	60 91 9c 00 	lds	r22, 0x009C
     81a:	70 91 9d 00 	lds	r23, 0x009D
     81e:	80 91 9e 00 	lds	r24, 0x009E
     822:	41 e0       	ldi	r20, 0x01	; 1
     824:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_OFF);
     828:	60 91 99 00 	lds	r22, 0x0099
     82c:	70 91 9a 00 	lds	r23, 0x009A
     830:	80 91 9b 00 	lds	r24, 0x009B
     834:	40 e0       	ldi	r20, 0x00	; 0
     836:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_OFF);
     83a:	60 91 96 00 	lds	r22, 0x0096
     83e:	70 91 97 00 	lds	r23, 0x0097
     842:	80 91 98 00 	lds	r24, 0x0098
     846:	40 e0       	ldi	r20, 0x00	; 0
     848:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_OFF);
     84c:	60 91 93 00 	lds	r22, 0x0093
     850:	70 91 94 00 	lds	r23, 0x0094
     854:	80 91 95 00 	lds	r24, 0x0095
     858:	40 e0       	ldi	r20, 0x00	; 0
     85a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_OFF);
     85e:	60 91 90 00 	lds	r22, 0x0090
     862:	70 91 91 00 	lds	r23, 0x0091
     866:	80 91 92 00 	lds	r24, 0x0092
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_OFF);
     870:	60 91 8d 00 	lds	r22, 0x008D
     874:	70 91 8e 00 	lds	r23, 0x008E
     878:	80 91 8f 00 	lds	r24, 0x008F
     87c:	40 e0       	ldi	r20, 0x00	; 0
     87e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     882:	60 91 8a 00 	lds	r22, 0x008A
     886:	70 91 8b 00 	lds	r23, 0x008B
     88a:	80 91 8c 00 	lds	r24, 0x008C
     88e:	40 e0       	ldi	r20, 0x00	; 0
     890:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     894:	60 91 87 00 	lds	r22, 0x0087
     898:	70 91 88 00 	lds	r23, 0x0088
     89c:	80 91 89 00 	lds	r24, 0x0089
     8a0:	40 e0       	ldi	r20, 0x00	; 0
     8a2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     8a6:	5e c2       	rjmp	.+1212   	; 0xd64 <__stack+0x505>
			case 2:
			LEDControl(Player1Led1,LED_ON);
     8a8:	60 91 9c 00 	lds	r22, 0x009C
     8ac:	70 91 9d 00 	lds	r23, 0x009D
     8b0:	80 91 9e 00 	lds	r24, 0x009E
     8b4:	41 e0       	ldi	r20, 0x01	; 1
     8b6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_ON);
     8ba:	60 91 99 00 	lds	r22, 0x0099
     8be:	70 91 9a 00 	lds	r23, 0x009A
     8c2:	80 91 9b 00 	lds	r24, 0x009B
     8c6:	41 e0       	ldi	r20, 0x01	; 1
     8c8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_OFF);
     8cc:	60 91 96 00 	lds	r22, 0x0096
     8d0:	70 91 97 00 	lds	r23, 0x0097
     8d4:	80 91 98 00 	lds	r24, 0x0098
     8d8:	40 e0       	ldi	r20, 0x00	; 0
     8da:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_OFF);
     8de:	60 91 93 00 	lds	r22, 0x0093
     8e2:	70 91 94 00 	lds	r23, 0x0094
     8e6:	80 91 95 00 	lds	r24, 0x0095
     8ea:	40 e0       	ldi	r20, 0x00	; 0
     8ec:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_OFF);
     8f0:	60 91 90 00 	lds	r22, 0x0090
     8f4:	70 91 91 00 	lds	r23, 0x0091
     8f8:	80 91 92 00 	lds	r24, 0x0092
     8fc:	40 e0       	ldi	r20, 0x00	; 0
     8fe:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_OFF);
     902:	60 91 8d 00 	lds	r22, 0x008D
     906:	70 91 8e 00 	lds	r23, 0x008E
     90a:	80 91 8f 00 	lds	r24, 0x008F
     90e:	40 e0       	ldi	r20, 0x00	; 0
     910:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     914:	60 91 8a 00 	lds	r22, 0x008A
     918:	70 91 8b 00 	lds	r23, 0x008B
     91c:	80 91 8c 00 	lds	r24, 0x008C
     920:	40 e0       	ldi	r20, 0x00	; 0
     922:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     926:	60 91 87 00 	lds	r22, 0x0087
     92a:	70 91 88 00 	lds	r23, 0x0088
     92e:	80 91 89 00 	lds	r24, 0x0089
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     938:	15 c2       	rjmp	.+1066   	; 0xd64 <__stack+0x505>
			case 3:
			LEDControl(Player1Led1,LED_ON);
     93a:	60 91 9c 00 	lds	r22, 0x009C
     93e:	70 91 9d 00 	lds	r23, 0x009D
     942:	80 91 9e 00 	lds	r24, 0x009E
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_ON);
     94c:	60 91 99 00 	lds	r22, 0x0099
     950:	70 91 9a 00 	lds	r23, 0x009A
     954:	80 91 9b 00 	lds	r24, 0x009B
     958:	41 e0       	ldi	r20, 0x01	; 1
     95a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_ON);
     95e:	60 91 96 00 	lds	r22, 0x0096
     962:	70 91 97 00 	lds	r23, 0x0097
     966:	80 91 98 00 	lds	r24, 0x0098
     96a:	41 e0       	ldi	r20, 0x01	; 1
     96c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_OFF);
     970:	60 91 93 00 	lds	r22, 0x0093
     974:	70 91 94 00 	lds	r23, 0x0094
     978:	80 91 95 00 	lds	r24, 0x0095
     97c:	40 e0       	ldi	r20, 0x00	; 0
     97e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_OFF);
     982:	60 91 90 00 	lds	r22, 0x0090
     986:	70 91 91 00 	lds	r23, 0x0091
     98a:	80 91 92 00 	lds	r24, 0x0092
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_OFF);
     994:	60 91 8d 00 	lds	r22, 0x008D
     998:	70 91 8e 00 	lds	r23, 0x008E
     99c:	80 91 8f 00 	lds	r24, 0x008F
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     9a6:	60 91 8a 00 	lds	r22, 0x008A
     9aa:	70 91 8b 00 	lds	r23, 0x008B
     9ae:	80 91 8c 00 	lds	r24, 0x008C
     9b2:	40 e0       	ldi	r20, 0x00	; 0
     9b4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     9b8:	60 91 87 00 	lds	r22, 0x0087
     9bc:	70 91 88 00 	lds	r23, 0x0088
     9c0:	80 91 89 00 	lds	r24, 0x0089
     9c4:	40 e0       	ldi	r20, 0x00	; 0
     9c6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     9ca:	cc c1       	rjmp	.+920    	; 0xd64 <__stack+0x505>
			case 4:
			LEDControl(Player1Led1,LED_ON);
     9cc:	60 91 9c 00 	lds	r22, 0x009C
     9d0:	70 91 9d 00 	lds	r23, 0x009D
     9d4:	80 91 9e 00 	lds	r24, 0x009E
     9d8:	41 e0       	ldi	r20, 0x01	; 1
     9da:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_ON);
     9de:	60 91 99 00 	lds	r22, 0x0099
     9e2:	70 91 9a 00 	lds	r23, 0x009A
     9e6:	80 91 9b 00 	lds	r24, 0x009B
     9ea:	41 e0       	ldi	r20, 0x01	; 1
     9ec:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_ON);
     9f0:	60 91 96 00 	lds	r22, 0x0096
     9f4:	70 91 97 00 	lds	r23, 0x0097
     9f8:	80 91 98 00 	lds	r24, 0x0098
     9fc:	41 e0       	ldi	r20, 0x01	; 1
     9fe:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_ON);
     a02:	60 91 93 00 	lds	r22, 0x0093
     a06:	70 91 94 00 	lds	r23, 0x0094
     a0a:	80 91 95 00 	lds	r24, 0x0095
     a0e:	41 e0       	ldi	r20, 0x01	; 1
     a10:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_OFF);
     a14:	60 91 90 00 	lds	r22, 0x0090
     a18:	70 91 91 00 	lds	r23, 0x0091
     a1c:	80 91 92 00 	lds	r24, 0x0092
     a20:	40 e0       	ldi	r20, 0x00	; 0
     a22:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_OFF);
     a26:	60 91 8d 00 	lds	r22, 0x008D
     a2a:	70 91 8e 00 	lds	r23, 0x008E
     a2e:	80 91 8f 00 	lds	r24, 0x008F
     a32:	40 e0       	ldi	r20, 0x00	; 0
     a34:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     a38:	60 91 8a 00 	lds	r22, 0x008A
     a3c:	70 91 8b 00 	lds	r23, 0x008B
     a40:	80 91 8c 00 	lds	r24, 0x008C
     a44:	40 e0       	ldi	r20, 0x00	; 0
     a46:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     a4a:	60 91 87 00 	lds	r22, 0x0087
     a4e:	70 91 88 00 	lds	r23, 0x0088
     a52:	80 91 89 00 	lds	r24, 0x0089
     a56:	40 e0       	ldi	r20, 0x00	; 0
     a58:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     a5c:	83 c1       	rjmp	.+774    	; 0xd64 <__stack+0x505>
			case 5:
			LEDControl(Player1Led1,LED_ON);
     a5e:	60 91 9c 00 	lds	r22, 0x009C
     a62:	70 91 9d 00 	lds	r23, 0x009D
     a66:	80 91 9e 00 	lds	r24, 0x009E
     a6a:	41 e0       	ldi	r20, 0x01	; 1
     a6c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_ON);
     a70:	60 91 99 00 	lds	r22, 0x0099
     a74:	70 91 9a 00 	lds	r23, 0x009A
     a78:	80 91 9b 00 	lds	r24, 0x009B
     a7c:	41 e0       	ldi	r20, 0x01	; 1
     a7e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_ON);
     a82:	60 91 96 00 	lds	r22, 0x0096
     a86:	70 91 97 00 	lds	r23, 0x0097
     a8a:	80 91 98 00 	lds	r24, 0x0098
     a8e:	41 e0       	ldi	r20, 0x01	; 1
     a90:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_ON);
     a94:	60 91 93 00 	lds	r22, 0x0093
     a98:	70 91 94 00 	lds	r23, 0x0094
     a9c:	80 91 95 00 	lds	r24, 0x0095
     aa0:	41 e0       	ldi	r20, 0x01	; 1
     aa2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_ON);
     aa6:	60 91 90 00 	lds	r22, 0x0090
     aaa:	70 91 91 00 	lds	r23, 0x0091
     aae:	80 91 92 00 	lds	r24, 0x0092
     ab2:	41 e0       	ldi	r20, 0x01	; 1
     ab4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_OFF);
     ab8:	60 91 8d 00 	lds	r22, 0x008D
     abc:	70 91 8e 00 	lds	r23, 0x008E
     ac0:	80 91 8f 00 	lds	r24, 0x008F
     ac4:	40 e0       	ldi	r20, 0x00	; 0
     ac6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     aca:	60 91 8a 00 	lds	r22, 0x008A
     ace:	70 91 8b 00 	lds	r23, 0x008B
     ad2:	80 91 8c 00 	lds	r24, 0x008C
     ad6:	40 e0       	ldi	r20, 0x00	; 0
     ad8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     adc:	60 91 87 00 	lds	r22, 0x0087
     ae0:	70 91 88 00 	lds	r23, 0x0088
     ae4:	80 91 89 00 	lds	r24, 0x0089
     ae8:	40 e0       	ldi	r20, 0x00	; 0
     aea:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     aee:	3a c1       	rjmp	.+628    	; 0xd64 <__stack+0x505>
			case 6:
			LEDControl(Player1Led1,LED_ON);
     af0:	60 91 9c 00 	lds	r22, 0x009C
     af4:	70 91 9d 00 	lds	r23, 0x009D
     af8:	80 91 9e 00 	lds	r24, 0x009E
     afc:	41 e0       	ldi	r20, 0x01	; 1
     afe:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_ON);
     b02:	60 91 99 00 	lds	r22, 0x0099
     b06:	70 91 9a 00 	lds	r23, 0x009A
     b0a:	80 91 9b 00 	lds	r24, 0x009B
     b0e:	41 e0       	ldi	r20, 0x01	; 1
     b10:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_ON);
     b14:	60 91 96 00 	lds	r22, 0x0096
     b18:	70 91 97 00 	lds	r23, 0x0097
     b1c:	80 91 98 00 	lds	r24, 0x0098
     b20:	41 e0       	ldi	r20, 0x01	; 1
     b22:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_ON);
     b26:	60 91 93 00 	lds	r22, 0x0093
     b2a:	70 91 94 00 	lds	r23, 0x0094
     b2e:	80 91 95 00 	lds	r24, 0x0095
     b32:	41 e0       	ldi	r20, 0x01	; 1
     b34:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_ON);
     b38:	60 91 90 00 	lds	r22, 0x0090
     b3c:	70 91 91 00 	lds	r23, 0x0091
     b40:	80 91 92 00 	lds	r24, 0x0092
     b44:	41 e0       	ldi	r20, 0x01	; 1
     b46:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_ON);
     b4a:	60 91 8d 00 	lds	r22, 0x008D
     b4e:	70 91 8e 00 	lds	r23, 0x008E
     b52:	80 91 8f 00 	lds	r24, 0x008F
     b56:	41 e0       	ldi	r20, 0x01	; 1
     b58:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     b5c:	60 91 8a 00 	lds	r22, 0x008A
     b60:	70 91 8b 00 	lds	r23, 0x008B
     b64:	80 91 8c 00 	lds	r24, 0x008C
     b68:	40 e0       	ldi	r20, 0x00	; 0
     b6a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     b6e:	60 91 87 00 	lds	r22, 0x0087
     b72:	70 91 88 00 	lds	r23, 0x0088
     b76:	80 91 89 00 	lds	r24, 0x0089
     b7a:	40 e0       	ldi	r20, 0x00	; 0
     b7c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     b80:	f1 c0       	rjmp	.+482    	; 0xd64 <__stack+0x505>
			case 7:
			LEDControl(Player1Led1,LED_ON);
     b82:	60 91 9c 00 	lds	r22, 0x009C
     b86:	70 91 9d 00 	lds	r23, 0x009D
     b8a:	80 91 9e 00 	lds	r24, 0x009E
     b8e:	41 e0       	ldi	r20, 0x01	; 1
     b90:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_ON);
     b94:	60 91 99 00 	lds	r22, 0x0099
     b98:	70 91 9a 00 	lds	r23, 0x009A
     b9c:	80 91 9b 00 	lds	r24, 0x009B
     ba0:	41 e0       	ldi	r20, 0x01	; 1
     ba2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_ON);
     ba6:	60 91 96 00 	lds	r22, 0x0096
     baa:	70 91 97 00 	lds	r23, 0x0097
     bae:	80 91 98 00 	lds	r24, 0x0098
     bb2:	41 e0       	ldi	r20, 0x01	; 1
     bb4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_ON);
     bb8:	60 91 93 00 	lds	r22, 0x0093
     bbc:	70 91 94 00 	lds	r23, 0x0094
     bc0:	80 91 95 00 	lds	r24, 0x0095
     bc4:	41 e0       	ldi	r20, 0x01	; 1
     bc6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_ON);
     bca:	60 91 90 00 	lds	r22, 0x0090
     bce:	70 91 91 00 	lds	r23, 0x0091
     bd2:	80 91 92 00 	lds	r24, 0x0092
     bd6:	41 e0       	ldi	r20, 0x01	; 1
     bd8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_ON);
     bdc:	60 91 8d 00 	lds	r22, 0x008D
     be0:	70 91 8e 00 	lds	r23, 0x008E
     be4:	80 91 8f 00 	lds	r24, 0x008F
     be8:	41 e0       	ldi	r20, 0x01	; 1
     bea:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_ON);
     bee:	60 91 8a 00 	lds	r22, 0x008A
     bf2:	70 91 8b 00 	lds	r23, 0x008B
     bf6:	80 91 8c 00 	lds	r24, 0x008C
     bfa:	41 e0       	ldi	r20, 0x01	; 1
     bfc:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     c00:	60 91 87 00 	lds	r22, 0x0087
     c04:	70 91 88 00 	lds	r23, 0x0088
     c08:	80 91 89 00 	lds	r24, 0x0089
     c0c:	40 e0       	ldi	r20, 0x00	; 0
     c0e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     c12:	a8 c0       	rjmp	.+336    	; 0xd64 <__stack+0x505>
			case 8:
			ATMEGA32_GICR->bits.b6=0;
     c14:	8b b7       	in	r24, 0x3b	; 59
     c16:	8f 7b       	andi	r24, 0xBF	; 191
     c18:	8b bf       	out	0x3b, r24	; 59
			ATMEGA32_GICR->bits.b7=0;
     c1a:	8b b7       	in	r24, 0x3b	; 59
     c1c:	8f 77       	andi	r24, 0x7F	; 127
     c1e:	8b bf       	out	0x3b, r24	; 59
			LEDControl(Player1Led1,LED_ON);
     c20:	60 91 9c 00 	lds	r22, 0x009C
     c24:	70 91 9d 00 	lds	r23, 0x009D
     c28:	80 91 9e 00 	lds	r24, 0x009E
     c2c:	41 e0       	ldi	r20, 0x01	; 1
     c2e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_ON);
     c32:	60 91 99 00 	lds	r22, 0x0099
     c36:	70 91 9a 00 	lds	r23, 0x009A
     c3a:	80 91 9b 00 	lds	r24, 0x009B
     c3e:	41 e0       	ldi	r20, 0x01	; 1
     c40:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_ON);
     c44:	60 91 96 00 	lds	r22, 0x0096
     c48:	70 91 97 00 	lds	r23, 0x0097
     c4c:	80 91 98 00 	lds	r24, 0x0098
     c50:	41 e0       	ldi	r20, 0x01	; 1
     c52:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_ON);
     c56:	60 91 93 00 	lds	r22, 0x0093
     c5a:	70 91 94 00 	lds	r23, 0x0094
     c5e:	80 91 95 00 	lds	r24, 0x0095
     c62:	41 e0       	ldi	r20, 0x01	; 1
     c64:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_ON);
     c68:	60 91 90 00 	lds	r22, 0x0090
     c6c:	70 91 91 00 	lds	r23, 0x0091
     c70:	80 91 92 00 	lds	r24, 0x0092
     c74:	41 e0       	ldi	r20, 0x01	; 1
     c76:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_ON);
     c7a:	60 91 8d 00 	lds	r22, 0x008D
     c7e:	70 91 8e 00 	lds	r23, 0x008E
     c82:	80 91 8f 00 	lds	r24, 0x008F
     c86:	41 e0       	ldi	r20, 0x01	; 1
     c88:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_ON);
     c8c:	60 91 8a 00 	lds	r22, 0x008A
     c90:	70 91 8b 00 	lds	r23, 0x008B
     c94:	80 91 8c 00 	lds	r24, 0x008C
     c98:	41 e0       	ldi	r20, 0x01	; 1
     c9a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_ON);
     c9e:	60 91 87 00 	lds	r22, 0x0087
     ca2:	70 91 88 00 	lds	r23, 0x0088
     ca6:	80 91 89 00 	lds	r24, 0x0089
     caa:	41 e0       	ldi	r20, 0x01	; 1
     cac:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cb0:	2f ef       	ldi	r18, 0xFF	; 255
     cb2:	83 ec       	ldi	r24, 0xC3	; 195
     cb4:	99 e0       	ldi	r25, 0x09	; 9
     cb6:	21 50       	subi	r18, 0x01	; 1
     cb8:	80 40       	sbci	r24, 0x00	; 0
     cba:	90 40       	sbci	r25, 0x00	; 0
     cbc:	e1 f7       	brne	.-8      	; 0xcb6 <__stack+0x457>
     cbe:	00 c0       	rjmp	.+0      	; 0xcc0 <__stack+0x461>
     cc0:	00 00       	nop
			_delay_ms(WinnerTimeBlinking_ms);
			LEDControl(Player1Led1,LED_OFF);
     cc2:	60 91 9c 00 	lds	r22, 0x009C
     cc6:	70 91 9d 00 	lds	r23, 0x009D
     cca:	80 91 9e 00 	lds	r24, 0x009E
     cce:	40 e0       	ldi	r20, 0x00	; 0
     cd0:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led2,LED_OFF);
     cd4:	60 91 99 00 	lds	r22, 0x0099
     cd8:	70 91 9a 00 	lds	r23, 0x009A
     cdc:	80 91 9b 00 	lds	r24, 0x009B
     ce0:	40 e0       	ldi	r20, 0x00	; 0
     ce2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led3,LED_OFF);
     ce6:	60 91 96 00 	lds	r22, 0x0096
     cea:	70 91 97 00 	lds	r23, 0x0097
     cee:	80 91 98 00 	lds	r24, 0x0098
     cf2:	40 e0       	ldi	r20, 0x00	; 0
     cf4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led4,LED_OFF);
     cf8:	60 91 93 00 	lds	r22, 0x0093
     cfc:	70 91 94 00 	lds	r23, 0x0094
     d00:	80 91 95 00 	lds	r24, 0x0095
     d04:	40 e0       	ldi	r20, 0x00	; 0
     d06:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led5,LED_OFF);
     d0a:	60 91 90 00 	lds	r22, 0x0090
     d0e:	70 91 91 00 	lds	r23, 0x0091
     d12:	80 91 92 00 	lds	r24, 0x0092
     d16:	40 e0       	ldi	r20, 0x00	; 0
     d18:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led6,LED_OFF);
     d1c:	60 91 8d 00 	lds	r22, 0x008D
     d20:	70 91 8e 00 	lds	r23, 0x008E
     d24:	80 91 8f 00 	lds	r24, 0x008F
     d28:	40 e0       	ldi	r20, 0x00	; 0
     d2a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led7,LED_OFF);
     d2e:	60 91 8a 00 	lds	r22, 0x008A
     d32:	70 91 8b 00 	lds	r23, 0x008B
     d36:	80 91 8c 00 	lds	r24, 0x008C
     d3a:	40 e0       	ldi	r20, 0x00	; 0
     d3c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player1Led8,LED_OFF);
     d40:	60 91 87 00 	lds	r22, 0x0087
     d44:	70 91 88 00 	lds	r23, 0x0088
     d48:	80 91 89 00 	lds	r24, 0x0089
     d4c:	40 e0       	ldi	r20, 0x00	; 0
     d4e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
     d52:	2f ef       	ldi	r18, 0xFF	; 255
     d54:	83 ec       	ldi	r24, 0xC3	; 195
     d56:	99 e0       	ldi	r25, 0x09	; 9
     d58:	21 50       	subi	r18, 0x01	; 1
     d5a:	80 40       	sbci	r24, 0x00	; 0
     d5c:	90 40       	sbci	r25, 0x00	; 0
     d5e:	e1 f7       	brne	.-8      	; 0xd58 <__stack+0x4f9>
     d60:	00 c0       	rjmp	.+0      	; 0xd62 <__stack+0x503>
     d62:	00 00       	nop
			break;
			default:
			break;
		}
		
		switch(counter2)
     d64:	80 91 a6 00 	lds	r24, 0x00A6
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	89 30       	cpi	r24, 0x09	; 9
     d6c:	91 05       	cpc	r25, r1
     d6e:	08 f0       	brcs	.+2      	; 0xd72 <__stack+0x513>
     d70:	f5 c2       	rjmp	.+1514   	; 0x135c <__stack+0xafd>
     d72:	fc 01       	movw	r30, r24
     d74:	ed 5b       	subi	r30, 0xBD	; 189
     d76:	ff 4f       	sbci	r31, 0xFF	; 255
     d78:	0c 94 b8 09 	jmp	0x1370	; 0x1370 <__tablejump2__>
		{
			case 0:
			LEDControl(Player2Led1,LED_OFF);
     d7c:	60 91 84 00 	lds	r22, 0x0084
     d80:	70 91 85 00 	lds	r23, 0x0085
     d84:	80 91 86 00 	lds	r24, 0x0086
     d88:	40 e0       	ldi	r20, 0x00	; 0
     d8a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_OFF);
     d8e:	60 91 81 00 	lds	r22, 0x0081
     d92:	70 91 82 00 	lds	r23, 0x0082
     d96:	80 91 83 00 	lds	r24, 0x0083
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_OFF);
     da0:	60 91 7e 00 	lds	r22, 0x007E
     da4:	70 91 7f 00 	lds	r23, 0x007F
     da8:	80 91 80 00 	lds	r24, 0x0080
     dac:	40 e0       	ldi	r20, 0x00	; 0
     dae:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_OFF);
     db2:	60 91 7b 00 	lds	r22, 0x007B
     db6:	70 91 7c 00 	lds	r23, 0x007C
     dba:	80 91 7d 00 	lds	r24, 0x007D
     dbe:	40 e0       	ldi	r20, 0x00	; 0
     dc0:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_OFF);
     dc4:	60 91 78 00 	lds	r22, 0x0078
     dc8:	70 91 79 00 	lds	r23, 0x0079
     dcc:	80 91 7a 00 	lds	r24, 0x007A
     dd0:	40 e0       	ldi	r20, 0x00	; 0
     dd2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_OFF);
     dd6:	60 91 75 00 	lds	r22, 0x0075
     dda:	70 91 76 00 	lds	r23, 0x0076
     dde:	80 91 77 00 	lds	r24, 0x0077
     de2:	40 e0       	ldi	r20, 0x00	; 0
     de4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
     de8:	60 91 72 00 	lds	r22, 0x0072
     dec:	70 91 73 00 	lds	r23, 0x0073
     df0:	80 91 74 00 	lds	r24, 0x0074
     df4:	40 e0       	ldi	r20, 0x00	; 0
     df6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
     dfa:	60 91 6f 00 	lds	r22, 0x006F
     dfe:	70 91 70 00 	lds	r23, 0x0070
     e02:	80 91 71 00 	lds	r24, 0x0071
     e06:	40 e0       	ldi	r20, 0x00	; 0
     e08:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     e0c:	08 95       	ret
			case 1:
			LEDControl(Player2Led1,LED_ON);
     e0e:	60 91 84 00 	lds	r22, 0x0084
     e12:	70 91 85 00 	lds	r23, 0x0085
     e16:	80 91 86 00 	lds	r24, 0x0086
     e1a:	41 e0       	ldi	r20, 0x01	; 1
     e1c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_OFF);
     e20:	60 91 81 00 	lds	r22, 0x0081
     e24:	70 91 82 00 	lds	r23, 0x0082
     e28:	80 91 83 00 	lds	r24, 0x0083
     e2c:	40 e0       	ldi	r20, 0x00	; 0
     e2e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_OFF);
     e32:	60 91 7e 00 	lds	r22, 0x007E
     e36:	70 91 7f 00 	lds	r23, 0x007F
     e3a:	80 91 80 00 	lds	r24, 0x0080
     e3e:	40 e0       	ldi	r20, 0x00	; 0
     e40:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_OFF);
     e44:	60 91 7b 00 	lds	r22, 0x007B
     e48:	70 91 7c 00 	lds	r23, 0x007C
     e4c:	80 91 7d 00 	lds	r24, 0x007D
     e50:	40 e0       	ldi	r20, 0x00	; 0
     e52:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_OFF);
     e56:	60 91 78 00 	lds	r22, 0x0078
     e5a:	70 91 79 00 	lds	r23, 0x0079
     e5e:	80 91 7a 00 	lds	r24, 0x007A
     e62:	40 e0       	ldi	r20, 0x00	; 0
     e64:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_OFF);
     e68:	60 91 75 00 	lds	r22, 0x0075
     e6c:	70 91 76 00 	lds	r23, 0x0076
     e70:	80 91 77 00 	lds	r24, 0x0077
     e74:	40 e0       	ldi	r20, 0x00	; 0
     e76:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
     e7a:	60 91 72 00 	lds	r22, 0x0072
     e7e:	70 91 73 00 	lds	r23, 0x0073
     e82:	80 91 74 00 	lds	r24, 0x0074
     e86:	40 e0       	ldi	r20, 0x00	; 0
     e88:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
     e8c:	60 91 6f 00 	lds	r22, 0x006F
     e90:	70 91 70 00 	lds	r23, 0x0070
     e94:	80 91 71 00 	lds	r24, 0x0071
     e98:	40 e0       	ldi	r20, 0x00	; 0
     e9a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     e9e:	08 95       	ret
			case 2:
			LEDControl(Player2Led1,LED_ON);
     ea0:	60 91 84 00 	lds	r22, 0x0084
     ea4:	70 91 85 00 	lds	r23, 0x0085
     ea8:	80 91 86 00 	lds	r24, 0x0086
     eac:	41 e0       	ldi	r20, 0x01	; 1
     eae:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_ON);
     eb2:	60 91 81 00 	lds	r22, 0x0081
     eb6:	70 91 82 00 	lds	r23, 0x0082
     eba:	80 91 83 00 	lds	r24, 0x0083
     ebe:	41 e0       	ldi	r20, 0x01	; 1
     ec0:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_OFF);
     ec4:	60 91 7e 00 	lds	r22, 0x007E
     ec8:	70 91 7f 00 	lds	r23, 0x007F
     ecc:	80 91 80 00 	lds	r24, 0x0080
     ed0:	40 e0       	ldi	r20, 0x00	; 0
     ed2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_OFF);
     ed6:	60 91 7b 00 	lds	r22, 0x007B
     eda:	70 91 7c 00 	lds	r23, 0x007C
     ede:	80 91 7d 00 	lds	r24, 0x007D
     ee2:	40 e0       	ldi	r20, 0x00	; 0
     ee4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_OFF);
     ee8:	60 91 78 00 	lds	r22, 0x0078
     eec:	70 91 79 00 	lds	r23, 0x0079
     ef0:	80 91 7a 00 	lds	r24, 0x007A
     ef4:	40 e0       	ldi	r20, 0x00	; 0
     ef6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_OFF);
     efa:	60 91 75 00 	lds	r22, 0x0075
     efe:	70 91 76 00 	lds	r23, 0x0076
     f02:	80 91 77 00 	lds	r24, 0x0077
     f06:	40 e0       	ldi	r20, 0x00	; 0
     f08:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
     f0c:	60 91 72 00 	lds	r22, 0x0072
     f10:	70 91 73 00 	lds	r23, 0x0073
     f14:	80 91 74 00 	lds	r24, 0x0074
     f18:	40 e0       	ldi	r20, 0x00	; 0
     f1a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
     f1e:	60 91 6f 00 	lds	r22, 0x006F
     f22:	70 91 70 00 	lds	r23, 0x0070
     f26:	80 91 71 00 	lds	r24, 0x0071
     f2a:	40 e0       	ldi	r20, 0x00	; 0
     f2c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     f30:	08 95       	ret
			case 3:
			LEDControl(Player2Led1,LED_ON);
     f32:	60 91 84 00 	lds	r22, 0x0084
     f36:	70 91 85 00 	lds	r23, 0x0085
     f3a:	80 91 86 00 	lds	r24, 0x0086
     f3e:	41 e0       	ldi	r20, 0x01	; 1
     f40:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_ON);
     f44:	60 91 81 00 	lds	r22, 0x0081
     f48:	70 91 82 00 	lds	r23, 0x0082
     f4c:	80 91 83 00 	lds	r24, 0x0083
     f50:	41 e0       	ldi	r20, 0x01	; 1
     f52:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_ON);
     f56:	60 91 7e 00 	lds	r22, 0x007E
     f5a:	70 91 7f 00 	lds	r23, 0x007F
     f5e:	80 91 80 00 	lds	r24, 0x0080
     f62:	41 e0       	ldi	r20, 0x01	; 1
     f64:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_OFF);
     f68:	60 91 7b 00 	lds	r22, 0x007B
     f6c:	70 91 7c 00 	lds	r23, 0x007C
     f70:	80 91 7d 00 	lds	r24, 0x007D
     f74:	40 e0       	ldi	r20, 0x00	; 0
     f76:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_OFF);
     f7a:	60 91 78 00 	lds	r22, 0x0078
     f7e:	70 91 79 00 	lds	r23, 0x0079
     f82:	80 91 7a 00 	lds	r24, 0x007A
     f86:	40 e0       	ldi	r20, 0x00	; 0
     f88:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_OFF);
     f8c:	60 91 75 00 	lds	r22, 0x0075
     f90:	70 91 76 00 	lds	r23, 0x0076
     f94:	80 91 77 00 	lds	r24, 0x0077
     f98:	40 e0       	ldi	r20, 0x00	; 0
     f9a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
     f9e:	60 91 72 00 	lds	r22, 0x0072
     fa2:	70 91 73 00 	lds	r23, 0x0073
     fa6:	80 91 74 00 	lds	r24, 0x0074
     faa:	40 e0       	ldi	r20, 0x00	; 0
     fac:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
     fb0:	60 91 6f 00 	lds	r22, 0x006F
     fb4:	70 91 70 00 	lds	r23, 0x0070
     fb8:	80 91 71 00 	lds	r24, 0x0071
     fbc:	40 e0       	ldi	r20, 0x00	; 0
     fbe:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
     fc2:	08 95       	ret
			case 4:
			LEDControl(Player2Led1,LED_ON);
     fc4:	60 91 84 00 	lds	r22, 0x0084
     fc8:	70 91 85 00 	lds	r23, 0x0085
     fcc:	80 91 86 00 	lds	r24, 0x0086
     fd0:	41 e0       	ldi	r20, 0x01	; 1
     fd2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_ON);
     fd6:	60 91 81 00 	lds	r22, 0x0081
     fda:	70 91 82 00 	lds	r23, 0x0082
     fde:	80 91 83 00 	lds	r24, 0x0083
     fe2:	41 e0       	ldi	r20, 0x01	; 1
     fe4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_ON);
     fe8:	60 91 7e 00 	lds	r22, 0x007E
     fec:	70 91 7f 00 	lds	r23, 0x007F
     ff0:	80 91 80 00 	lds	r24, 0x0080
     ff4:	41 e0       	ldi	r20, 0x01	; 1
     ff6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_ON);
     ffa:	60 91 7b 00 	lds	r22, 0x007B
     ffe:	70 91 7c 00 	lds	r23, 0x007C
    1002:	80 91 7d 00 	lds	r24, 0x007D
    1006:	41 e0       	ldi	r20, 0x01	; 1
    1008:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_OFF);
    100c:	60 91 78 00 	lds	r22, 0x0078
    1010:	70 91 79 00 	lds	r23, 0x0079
    1014:	80 91 7a 00 	lds	r24, 0x007A
    1018:	40 e0       	ldi	r20, 0x00	; 0
    101a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_OFF);
    101e:	60 91 75 00 	lds	r22, 0x0075
    1022:	70 91 76 00 	lds	r23, 0x0076
    1026:	80 91 77 00 	lds	r24, 0x0077
    102a:	40 e0       	ldi	r20, 0x00	; 0
    102c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
    1030:	60 91 72 00 	lds	r22, 0x0072
    1034:	70 91 73 00 	lds	r23, 0x0073
    1038:	80 91 74 00 	lds	r24, 0x0074
    103c:	40 e0       	ldi	r20, 0x00	; 0
    103e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
    1042:	60 91 6f 00 	lds	r22, 0x006F
    1046:	70 91 70 00 	lds	r23, 0x0070
    104a:	80 91 71 00 	lds	r24, 0x0071
    104e:	40 e0       	ldi	r20, 0x00	; 0
    1050:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
    1054:	08 95       	ret
			case 5:
			LEDControl(Player2Led1,LED_ON);
    1056:	60 91 84 00 	lds	r22, 0x0084
    105a:	70 91 85 00 	lds	r23, 0x0085
    105e:	80 91 86 00 	lds	r24, 0x0086
    1062:	41 e0       	ldi	r20, 0x01	; 1
    1064:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_ON);
    1068:	60 91 81 00 	lds	r22, 0x0081
    106c:	70 91 82 00 	lds	r23, 0x0082
    1070:	80 91 83 00 	lds	r24, 0x0083
    1074:	41 e0       	ldi	r20, 0x01	; 1
    1076:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_ON);
    107a:	60 91 7e 00 	lds	r22, 0x007E
    107e:	70 91 7f 00 	lds	r23, 0x007F
    1082:	80 91 80 00 	lds	r24, 0x0080
    1086:	41 e0       	ldi	r20, 0x01	; 1
    1088:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_ON);
    108c:	60 91 7b 00 	lds	r22, 0x007B
    1090:	70 91 7c 00 	lds	r23, 0x007C
    1094:	80 91 7d 00 	lds	r24, 0x007D
    1098:	41 e0       	ldi	r20, 0x01	; 1
    109a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_ON);
    109e:	60 91 78 00 	lds	r22, 0x0078
    10a2:	70 91 79 00 	lds	r23, 0x0079
    10a6:	80 91 7a 00 	lds	r24, 0x007A
    10aa:	41 e0       	ldi	r20, 0x01	; 1
    10ac:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_OFF);
    10b0:	60 91 75 00 	lds	r22, 0x0075
    10b4:	70 91 76 00 	lds	r23, 0x0076
    10b8:	80 91 77 00 	lds	r24, 0x0077
    10bc:	40 e0       	ldi	r20, 0x00	; 0
    10be:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
    10c2:	60 91 72 00 	lds	r22, 0x0072
    10c6:	70 91 73 00 	lds	r23, 0x0073
    10ca:	80 91 74 00 	lds	r24, 0x0074
    10ce:	40 e0       	ldi	r20, 0x00	; 0
    10d0:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
    10d4:	60 91 6f 00 	lds	r22, 0x006F
    10d8:	70 91 70 00 	lds	r23, 0x0070
    10dc:	80 91 71 00 	lds	r24, 0x0071
    10e0:	40 e0       	ldi	r20, 0x00	; 0
    10e2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
    10e6:	08 95       	ret
			case 6:
			LEDControl(Player2Led1,LED_ON);
    10e8:	60 91 84 00 	lds	r22, 0x0084
    10ec:	70 91 85 00 	lds	r23, 0x0085
    10f0:	80 91 86 00 	lds	r24, 0x0086
    10f4:	41 e0       	ldi	r20, 0x01	; 1
    10f6:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_ON);
    10fa:	60 91 81 00 	lds	r22, 0x0081
    10fe:	70 91 82 00 	lds	r23, 0x0082
    1102:	80 91 83 00 	lds	r24, 0x0083
    1106:	41 e0       	ldi	r20, 0x01	; 1
    1108:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_ON);
    110c:	60 91 7e 00 	lds	r22, 0x007E
    1110:	70 91 7f 00 	lds	r23, 0x007F
    1114:	80 91 80 00 	lds	r24, 0x0080
    1118:	41 e0       	ldi	r20, 0x01	; 1
    111a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_ON);
    111e:	60 91 7b 00 	lds	r22, 0x007B
    1122:	70 91 7c 00 	lds	r23, 0x007C
    1126:	80 91 7d 00 	lds	r24, 0x007D
    112a:	41 e0       	ldi	r20, 0x01	; 1
    112c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_ON);
    1130:	60 91 78 00 	lds	r22, 0x0078
    1134:	70 91 79 00 	lds	r23, 0x0079
    1138:	80 91 7a 00 	lds	r24, 0x007A
    113c:	41 e0       	ldi	r20, 0x01	; 1
    113e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_ON);
    1142:	60 91 75 00 	lds	r22, 0x0075
    1146:	70 91 76 00 	lds	r23, 0x0076
    114a:	80 91 77 00 	lds	r24, 0x0077
    114e:	41 e0       	ldi	r20, 0x01	; 1
    1150:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
    1154:	60 91 72 00 	lds	r22, 0x0072
    1158:	70 91 73 00 	lds	r23, 0x0073
    115c:	80 91 74 00 	lds	r24, 0x0074
    1160:	40 e0       	ldi	r20, 0x00	; 0
    1162:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
    1166:	60 91 6f 00 	lds	r22, 0x006F
    116a:	70 91 70 00 	lds	r23, 0x0070
    116e:	80 91 71 00 	lds	r24, 0x0071
    1172:	40 e0       	ldi	r20, 0x00	; 0
    1174:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
    1178:	08 95       	ret
			case 7:
			LEDControl(Player2Led1,LED_ON);
    117a:	60 91 84 00 	lds	r22, 0x0084
    117e:	70 91 85 00 	lds	r23, 0x0085
    1182:	80 91 86 00 	lds	r24, 0x0086
    1186:	41 e0       	ldi	r20, 0x01	; 1
    1188:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_ON);
    118c:	60 91 81 00 	lds	r22, 0x0081
    1190:	70 91 82 00 	lds	r23, 0x0082
    1194:	80 91 83 00 	lds	r24, 0x0083
    1198:	41 e0       	ldi	r20, 0x01	; 1
    119a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_ON);
    119e:	60 91 7e 00 	lds	r22, 0x007E
    11a2:	70 91 7f 00 	lds	r23, 0x007F
    11a6:	80 91 80 00 	lds	r24, 0x0080
    11aa:	41 e0       	ldi	r20, 0x01	; 1
    11ac:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_ON);
    11b0:	60 91 7b 00 	lds	r22, 0x007B
    11b4:	70 91 7c 00 	lds	r23, 0x007C
    11b8:	80 91 7d 00 	lds	r24, 0x007D
    11bc:	41 e0       	ldi	r20, 0x01	; 1
    11be:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_ON);
    11c2:	60 91 78 00 	lds	r22, 0x0078
    11c6:	70 91 79 00 	lds	r23, 0x0079
    11ca:	80 91 7a 00 	lds	r24, 0x007A
    11ce:	41 e0       	ldi	r20, 0x01	; 1
    11d0:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_ON);
    11d4:	60 91 75 00 	lds	r22, 0x0075
    11d8:	70 91 76 00 	lds	r23, 0x0076
    11dc:	80 91 77 00 	lds	r24, 0x0077
    11e0:	41 e0       	ldi	r20, 0x01	; 1
    11e2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_ON);
    11e6:	60 91 72 00 	lds	r22, 0x0072
    11ea:	70 91 73 00 	lds	r23, 0x0073
    11ee:	80 91 74 00 	lds	r24, 0x0074
    11f2:	41 e0       	ldi	r20, 0x01	; 1
    11f4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
    11f8:	60 91 6f 00 	lds	r22, 0x006F
    11fc:	70 91 70 00 	lds	r23, 0x0070
    1200:	80 91 71 00 	lds	r24, 0x0071
    1204:	40 e0       	ldi	r20, 0x00	; 0
    1206:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			break;
    120a:	08 95       	ret
			case 8:
			ATMEGA32_GICR->bits.b6=0;
    120c:	8b b7       	in	r24, 0x3b	; 59
    120e:	8f 7b       	andi	r24, 0xBF	; 191
    1210:	8b bf       	out	0x3b, r24	; 59
			ATMEGA32_GICR->bits.b7=0;
    1212:	8b b7       	in	r24, 0x3b	; 59
    1214:	8f 77       	andi	r24, 0x7F	; 127
    1216:	8b bf       	out	0x3b, r24	; 59
			LEDControl(Player2Led1,LED_ON);
    1218:	60 91 84 00 	lds	r22, 0x0084
    121c:	70 91 85 00 	lds	r23, 0x0085
    1220:	80 91 86 00 	lds	r24, 0x0086
    1224:	41 e0       	ldi	r20, 0x01	; 1
    1226:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_ON);
    122a:	60 91 81 00 	lds	r22, 0x0081
    122e:	70 91 82 00 	lds	r23, 0x0082
    1232:	80 91 83 00 	lds	r24, 0x0083
    1236:	41 e0       	ldi	r20, 0x01	; 1
    1238:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_ON);
    123c:	60 91 7e 00 	lds	r22, 0x007E
    1240:	70 91 7f 00 	lds	r23, 0x007F
    1244:	80 91 80 00 	lds	r24, 0x0080
    1248:	41 e0       	ldi	r20, 0x01	; 1
    124a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_ON);
    124e:	60 91 7b 00 	lds	r22, 0x007B
    1252:	70 91 7c 00 	lds	r23, 0x007C
    1256:	80 91 7d 00 	lds	r24, 0x007D
    125a:	41 e0       	ldi	r20, 0x01	; 1
    125c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_ON);
    1260:	60 91 78 00 	lds	r22, 0x0078
    1264:	70 91 79 00 	lds	r23, 0x0079
    1268:	80 91 7a 00 	lds	r24, 0x007A
    126c:	41 e0       	ldi	r20, 0x01	; 1
    126e:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_ON);
    1272:	60 91 75 00 	lds	r22, 0x0075
    1276:	70 91 76 00 	lds	r23, 0x0076
    127a:	80 91 77 00 	lds	r24, 0x0077
    127e:	41 e0       	ldi	r20, 0x01	; 1
    1280:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_ON);
    1284:	60 91 72 00 	lds	r22, 0x0072
    1288:	70 91 73 00 	lds	r23, 0x0073
    128c:	80 91 74 00 	lds	r24, 0x0074
    1290:	41 e0       	ldi	r20, 0x01	; 1
    1292:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_ON);
    1296:	60 91 6f 00 	lds	r22, 0x006F
    129a:	70 91 70 00 	lds	r23, 0x0070
    129e:	80 91 71 00 	lds	r24, 0x0071
    12a2:	41 e0       	ldi	r20, 0x01	; 1
    12a4:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
    12a8:	2f ef       	ldi	r18, 0xFF	; 255
    12aa:	83 ec       	ldi	r24, 0xC3	; 195
    12ac:	99 e0       	ldi	r25, 0x09	; 9
    12ae:	21 50       	subi	r18, 0x01	; 1
    12b0:	80 40       	sbci	r24, 0x00	; 0
    12b2:	90 40       	sbci	r25, 0x00	; 0
    12b4:	e1 f7       	brne	.-8      	; 0x12ae <__stack+0xa4f>
    12b6:	00 c0       	rjmp	.+0      	; 0x12b8 <__stack+0xa59>
    12b8:	00 00       	nop
			_delay_ms(WinnerTimeBlinking_ms);
			LEDControl(Player2Led1,LED_OFF);
    12ba:	60 91 84 00 	lds	r22, 0x0084
    12be:	70 91 85 00 	lds	r23, 0x0085
    12c2:	80 91 86 00 	lds	r24, 0x0086
    12c6:	40 e0       	ldi	r20, 0x00	; 0
    12c8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led2,LED_OFF);
    12cc:	60 91 81 00 	lds	r22, 0x0081
    12d0:	70 91 82 00 	lds	r23, 0x0082
    12d4:	80 91 83 00 	lds	r24, 0x0083
    12d8:	40 e0       	ldi	r20, 0x00	; 0
    12da:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led3,LED_OFF);
    12de:	60 91 7e 00 	lds	r22, 0x007E
    12e2:	70 91 7f 00 	lds	r23, 0x007F
    12e6:	80 91 80 00 	lds	r24, 0x0080
    12ea:	40 e0       	ldi	r20, 0x00	; 0
    12ec:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led4,LED_OFF);
    12f0:	60 91 7b 00 	lds	r22, 0x007B
    12f4:	70 91 7c 00 	lds	r23, 0x007C
    12f8:	80 91 7d 00 	lds	r24, 0x007D
    12fc:	40 e0       	ldi	r20, 0x00	; 0
    12fe:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led5,LED_OFF);
    1302:	60 91 78 00 	lds	r22, 0x0078
    1306:	70 91 79 00 	lds	r23, 0x0079
    130a:	80 91 7a 00 	lds	r24, 0x007A
    130e:	40 e0       	ldi	r20, 0x00	; 0
    1310:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led6,LED_OFF);
    1314:	60 91 75 00 	lds	r22, 0x0075
    1318:	70 91 76 00 	lds	r23, 0x0076
    131c:	80 91 77 00 	lds	r24, 0x0077
    1320:	40 e0       	ldi	r20, 0x00	; 0
    1322:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led7,LED_OFF);
    1326:	60 91 72 00 	lds	r22, 0x0072
    132a:	70 91 73 00 	lds	r23, 0x0073
    132e:	80 91 74 00 	lds	r24, 0x0074
    1332:	40 e0       	ldi	r20, 0x00	; 0
    1334:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
			LEDControl(Player2Led8,LED_OFF);
    1338:	60 91 6f 00 	lds	r22, 0x006F
    133c:	70 91 70 00 	lds	r23, 0x0070
    1340:	80 91 71 00 	lds	r24, 0x0071
    1344:	40 e0       	ldi	r20, 0x00	; 0
    1346:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LEDControl>
    134a:	2f ef       	ldi	r18, 0xFF	; 255
    134c:	83 ec       	ldi	r24, 0xC3	; 195
    134e:	99 e0       	ldi	r25, 0x09	; 9
    1350:	21 50       	subi	r18, 0x01	; 1
    1352:	80 40       	sbci	r24, 0x00	; 0
    1354:	90 40       	sbci	r25, 0x00	; 0
    1356:	e1 f7       	brne	.-8      	; 0x1350 <__stack+0xaf1>
    1358:	00 c0       	rjmp	.+0      	; 0x135a <__stack+0xafb>
    135a:	00 00       	nop
    135c:	08 95       	ret

0000135e <main>:
#include "LedSpeedGame.h"


int main()
{
	ResetGame();
    135e:	0e 94 09 03 	call	0x612	; 0x612 <ResetGame>
	Player1_initiate();
    1362:	0e 94 18 03 	call	0x630	; 0x630 <Player1_initiate>
	Player2_initiate();
    1366:	0e 94 67 03 	call	0x6ce	; 0x6ce <Player2_initiate>
	
	while(1)
	{
		Led_Update();
    136a:	0e 94 b6 03 	call	0x76c	; 0x76c <Led_Update>
    136e:	fd cf       	rjmp	.-6      	; 0x136a <main+0xc>

00001370 <__tablejump2__>:
    1370:	ee 0f       	add	r30, r30
    1372:	ff 1f       	adc	r31, r31

00001374 <__tablejump__>:
    1374:	05 90       	lpm	r0, Z+
    1376:	f4 91       	lpm	r31, Z
    1378:	e0 2d       	mov	r30, r0
    137a:	09 94       	ijmp

0000137c <_exit>:
    137c:	f8 94       	cli

0000137e <__stop_program>:
    137e:	ff cf       	rjmp	.-2      	; 0x137e <__stop_program>
